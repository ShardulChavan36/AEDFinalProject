/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Admin;

import model.DB4OUtil.DB4OUtil;
import model.EcoSystem.EcoSystem;
import model.Enterprise.DonorInventory.DonorDetails;
import model.Enterprise.DonorInventory.DonorInventory;
//import model.Firebase.FirebaseHelper;
import UI.MainFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Shardul
 */
public class ManageDonorInventory extends javax.swing.JPanel {

    /**
     * Creates new form ManageDonorInventory
     */
    MainFrame mainFrame;
//    FirebaseHelper firebaseHelper;
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil;

    public ManageDonorInventory(MainFrame mainFrame, DB4OUtil dB4OUtil, EcoSystem ecoSystem) {
        initComponents();
        this.mainFrame = mainFrame;
        this.dB4OUtil = dB4OUtil;
        this.ecoSystem = ecoSystem;
        populateDonorBankTable();
        populateDonorTable();
        for(DonorInventory h: ecoSystem.getDonorbankdirectory()){
            cmb_donorbnkname.addItem(h.getEnterpriseName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        donorBankDets = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        donorDets = new javax.swing.JTable();
        delBtn = new javax.swing.JButton();
        delDonorDets = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        lbl_uname = new javax.swing.JLabel();
        lbl_pswd = new javax.swing.JLabel();
        lbl_registeryNum = new javax.swing.JLabel();
        lbl_address = new javax.swing.JLabel();
        txtAdd = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txt_City = new javax.swing.JLabel();
        txt_state = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();
        txt_Zip = new javax.swing.JLabel();
        txtFullName1 = new javax.swing.JTextField();
        lbl_name1 = new javax.swing.JLabel();
        txtUsrName1 = new javax.swing.JTextField();
        lbl_uname1 = new javax.swing.JLabel();
        txtPass1 = new javax.swing.JPasswordField();
        lbl_pswd1 = new javax.swing.JLabel();
        cmb_gender = new javax.swing.JComboBox<>();
        lbl_gender = new javax.swing.JLabel();
        txt_telenum = new javax.swing.JTextField();
        lbl_telenum = new javax.swing.JLabel();
        cmb_donorbnkname = new javax.swing.JComboBox<>();
        lbl_donorbnkname = new javax.swing.JLabel();
        txtAdd1 = new javax.swing.JTextField();
        lbl_address1 = new javax.swing.JLabel();
        txtCity1 = new javax.swing.JTextField();
        txt_City1 = new javax.swing.JLabel();
        txtState1 = new javax.swing.JTextField();
        txt_state1 = new javax.swing.JLabel();
        txtZip1 = new javax.swing.JTextField();
        txt_Zip1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btn_signup = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        txtUsrName = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        txtNo = new javax.swing.JTextField();
        btn_signup1 = new javax.swing.JButton();
        viewDonorbank = new javax.swing.JButton();
        updateDoc = new javax.swing.JButton();
        updateDoc1 = new javax.swing.JButton();
        viewDonorbank1 = new javax.swing.JButton();

        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.default.focusColor"));

        donorBankDets.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.pressedBackground"));
        donorBankDets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Registry Number", "Enterprise Name", "Pswd"
            }
        ));
        jScrollPane1.setViewportView(donorBankDets);

        donorDets.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.disabledBorderColor"));
        donorDets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Medical History", "Donor Bank Name", "Pswd"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(donorDets);

        delBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        delBtn.setText("Delete");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        delDonorDets.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        delDonorDets.setText("Delete");
        delDonorDets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delDonorDetsActionPerformed(evt);
            }
        });

        jLabel1.setText("Donor Bank Details");

        jLabel2.setText("Donor Details");

        lbl_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name.setText("Donor Inventory Name:");

        lbl_uname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_uname.setText("Username:");

        lbl_pswd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_pswd.setText("Password:");

        lbl_registeryNum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_registeryNum.setText("Registration No.:");

        lbl_address.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address.setText("Address:");

        txtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddActionPerformed(evt);
            }
        });
        txtAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddKeyReleased(evt);
            }
        });

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCityKeyReleased(evt);
            }
        });

        txt_City.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City.setText("City:");

        txt_state.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state.setText("State:");

        txtState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStateActionPerformed(evt);
            }
        });
        txtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStateKeyReleased(evt);
            }
        });

        txtZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipActionPerformed(evt);
            }
        });
        txtZip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtZipKeyReleased(evt);
            }
        });

        txt_Zip.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip.setText("Zip Code:");

        txtFullName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullName1ActionPerformed(evt);
            }
        });
        txtFullName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullName1KeyReleased(evt);
            }
        });

        lbl_name1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name1.setText("Name:");

        txtUsrName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrName1ActionPerformed(evt);
            }
        });

        lbl_uname1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_uname1.setText("Username:");

        txtPass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPass1ActionPerformed(evt);
            }
        });

        lbl_pswd1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_pswd1.setText("Password:");

        cmb_gender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmb_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        lbl_gender.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_gender.setText("Gender:");

        txt_telenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telenumActionPerformed(evt);
            }
        });
        txt_telenum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_telenumKeyReleased(evt);
            }
        });

        lbl_telenum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_telenum.setText("Phone no.:");

        cmb_donorbnkname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lbl_donorbnkname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_donorbnkname.setText("Donor Bank:");

        txtAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd1ActionPerformed(evt);
            }
        });
        txtAdd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd1KeyReleased(evt);
            }
        });

        lbl_address1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address1.setText("Address:");

        txtCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCity1ActionPerformed(evt);
            }
        });
        txtCity1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCity1KeyReleased(evt);
            }
        });

        txt_City1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City1.setText("City:");

        txtState1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtState1ActionPerformed(evt);
            }
        });
        txtState1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtState1KeyReleased(evt);
            }
        });

        txt_state1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state1.setText("State:");

        txtZip1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZip1ActionPerformed(evt);
            }
        });
        txtZip1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtZip1KeyReleased(evt);
            }
        });

        txt_Zip1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip1.setText("Zip Code:");

        btn_signup.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_signup.setText("Sign Up");
        btn_signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_signupActionPerformed(evt);
            }
        });

        jLabel3.setText("Date of Birth");

        txtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameActionPerformed(evt);
            }
        });
        txtFullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullNameKeyReleased(evt);
            }
        });

        txtUsrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrNameActionPerformed(evt);
            }
        });

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        txtNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoActionPerformed(evt);
            }
        });
        txtNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoKeyReleased(evt);
            }
        });

        btn_signup1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_signup1.setText("Sign Up");
        btn_signup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_signup1ActionPerformed(evt);
            }
        });

        viewDonorbank.setText("View");
        viewDonorbank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDonorbankActionPerformed(evt);
            }
        });

        updateDoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateDoc.setText("Update");
        updateDoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDocActionPerformed(evt);
            }
        });

        updateDoc1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateDoc1.setText("Update");
        updateDoc1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDoc1ActionPerformed(evt);
            }
        });

        viewDonorbank1.setText("View");
        viewDonorbank1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDonorbank1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_uname, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_name))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                    .addComponent(txtUsrName)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_registeryNum)
                                    .addComponent(lbl_pswd, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNo)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_Zip, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_state)
                                .addGap(18, 18, 18)
                                .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_City, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_address)
                                .addGap(18, 18, 18)
                                .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(430, 430, 430))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(delBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_signup1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewDonorbank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btn_signup)
                            .addComponent(viewDonorbank1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateDoc1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(delDonorDets, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbl_name1)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtFullName1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbl_uname1)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtUsrName1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(lbl_pswd1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(lbl_gender)
                                                    .addGap(20, 20, 20)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbl_telenum)
                                                .addGap(14, 14, 14))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(6, 6, 6)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_telenum, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(87, 87, 87)
                                        .addComponent(lbl_donorbnkname)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmb_donorbnkname, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txt_Zip1))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(87, 87, 87)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbl_address1)
                                                    .addComponent(txt_City1)
                                                    .addComponent(txt_state1))))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtState1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtZip1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel2)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btn_signup1)
                        .addGap(29, 29, 29)
                        .addComponent(viewDonorbank)
                        .addGap(26, 26, 26)
                        .addComponent(updateDoc)
                        .addGap(29, 29, 29)
                        .addComponent(delBtn)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_name)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_address)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_uname)
                            .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_City)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_pswd)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_registeryNum)
                            .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_state)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Zip)
                            .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_signup)
                        .addGap(18, 18, 18)
                        .addComponent(viewDonorbank1)
                        .addGap(18, 18, 18)
                        .addComponent(updateDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(delDonorDets)
                        .addGap(32, 32, 32)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_name1)
                    .addComponent(txtFullName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_donorbnkname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_donorbnkname))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsrName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_uname1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_pswd1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_gender)
                            .addComponent(cmb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_telenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_telenum)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_address1)
                            .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_City1)
                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtState1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_state1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Zip1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = donorBankDets.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) donorBankDets.getModel();
        String doctorUName = model.getValueAt(selectedRow, 0).toString();
        System.out.println(" donorbank uname: " + doctorUName);
        ecoSystem.deleteDonorBank(doctorUName);
        dB4OUtil.storeSystem(ecoSystem);
        populateDonorBankTable();
        populateDonorTable();
    }//GEN-LAST:event_delBtnActionPerformed

    private void delDonorDetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delDonorDetsActionPerformed
        // TODO add your handling code here:
         int selectedRow = donorDets.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) donorDets.getModel();
        String doctorUName = model.getValueAt(selectedRow, 0).toString();
        System.out.println(" donor uname: " + doctorUName);
        ecoSystem.deleteDonor(doctorUName);
        dB4OUtil.storeSystem(ecoSystem);
        populateDonorBankTable();
        populateDonorTable();
    }//GEN-LAST:event_delDonorDetsActionPerformed

    private void txtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddActionPerformed

    private void txtAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddKeyReleased
        // TODO add your handling code here:

        //        String addrconv = "^[a-zA-Z0-9 ]{0,30}$";
        //        Pattern pat = Pattern.compile(addrconv);
        //        Matcher mat = pat.matcher(txtAdd.getText());
        //
        //        if (!mat.matches()) {
            //            add_chk.setText("Address is incorrect");
            //        } else {
            //            add_chk.setText("");
            //        }
    }//GEN-LAST:event_txtAddKeyReleased

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyReleased
        // TODO add your handling code here:
        //        String cityconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(cityconv);
        //        Matcher mat = pat.matcher(txtCity.getText());
        //
        //        if (!mat.matches()) {
            //            city_chk.setText("City is incorrect");
            //        } else {
            //            city_chk.setText("");
            //        }
    }//GEN-LAST:event_txtCityKeyReleased

    private void txtStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateActionPerformed

    private void txtStateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStateKeyReleased
        // TODO add your handling code here:

        //        String stateconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(stateconv);
        //        Matcher mat = pat.matcher(txtState.getText());
        //
        //        if (!mat.matches()) {
            //            state_chk.setText("State is incorrect");
            //        } else {
            //            state_chk.setText("");
            //        }
    }//GEN-LAST:event_txtStateKeyReleased

    private void txtZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipActionPerformed

    private void txtZipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipKeyReleased
        // TODO add your handling code here:
        //        String zipconv = "^[0-9]{5}$";
        //        Pattern pat = Pattern.compile(zipconv);
        //        Matcher mat = pat.matcher(txtZip.getText());
        //
        //        if (!mat.matches()) {
            //            zip_chk.setText("Zipcode is incorrect");
            //        } else {
            //            zip_chk.setText("");
            //        }
    }//GEN-LAST:event_txtZipKeyReleased

    private void txtFullName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullName1ActionPerformed

    private void txtFullName1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullName1KeyReleased
        // TODO add your handling code here:
        //        String nameconv = "^[a-zA-Z ]{1,17}$";
        //        Pattern pat = Pattern.compile(nameconv);
        //        Matcher mat = pat.matcher(txtFullName.getText());
        //
        //        if (!mat.matches()) {
            //            name_chk.setText("Name is incorrect");
            //        } else {
            //            name_chk.setText("");
            //        }
    }//GEN-LAST:event_txtFullName1KeyReleased

    private void txtUsrName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrName1ActionPerformed

    private void txtPass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPass1ActionPerformed

    private void txt_telenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telenumActionPerformed

    private void txt_telenumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telenumKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telenumKeyReleased

    private void txtAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd1ActionPerformed

    private void txtAdd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd1KeyReleased
        // TODO add your handling code here:

        //        String addrconv = "^[a-zA-Z0-9 ]{0,30}$";
        //        Pattern pat = Pattern.compile(addrconv);
        //        Matcher mat = pat.matcher(txtAdd.getText());
        //
        //        if (!mat.matches()) {
            //            add_chk.setText("Address is incorrect");
            //        } else {
            //            add_chk.setText("");
            //        }
    }//GEN-LAST:event_txtAdd1KeyReleased

    private void txtCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity1ActionPerformed

    private void txtCity1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCity1KeyReleased
        // TODO add your handling code here:
        //        String cityconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(cityconv);
        //        Matcher mat = pat.matcher(txtCity.getText());
        //
        //        if (!mat.matches()) {
            //            city_chk.setText("City is incorrect");
            //        } else {
            //            city_chk.setText("");
            //        }
    }//GEN-LAST:event_txtCity1KeyReleased

    private void txtState1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtState1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState1ActionPerformed

    private void txtState1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtState1KeyReleased
        // TODO add your handling code here:

        //        String stateconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(stateconv);
        //        Matcher mat = pat.matcher(txtState.getText());
        //
        //        if (!mat.matches()) {
            //            state_chk.setText("State is incorrect");
            //        } else {
            //            state_chk.setText("");
            //        }
    }//GEN-LAST:event_txtState1KeyReleased

    private void txtZip1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZip1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip1ActionPerformed

    private void txtZip1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZip1KeyReleased
        // TODO add your handling code here:
        //        String zipconv = "^[0-9]{5}$";
        //        Pattern pat = Pattern.compile(zipconv);
        //        Matcher mat = pat.matcher(txtZip.getText());
        //
        //        if (!mat.matches()) {
            //            zip_chk.setText("Zipcode is incorrect");
            //        } else {
            //            zip_chk.setText("");
            //        }
    }//GEN-LAST:event_txtZip1KeyReleased

    private void btn_signupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_signupActionPerformed
        // TODO add your handling code here
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(DonorDetails e:ecoSystem.getDonordirectory()){
            if(randomEncId.equals(e.getId())){
               
               randomEncId =String.valueOf(Math.random()*9999+100);
            }
            
        }
        String address = txtAdd.getText() + txtCity.getText() + txtState.getText() + txtZip.getText();
        //uname, pswd, id, name, add, gender, telenum, dob
        //(txtFullName.getText(), txtNo.getText(), address, txtUsrName.getText(), txtPass.getText());

        DonorDetails donor = new DonorDetails(txtUsrName1.getText(), txtPass1.getText(), randomEncId, txtFullName1.getText(), address, cmb_gender.getSelectedItem().toString(), txt_telenum.getText(), jDateChooser1.getDate(),cmb_donorbnkname.getSelectedItem().toString(),"");

        ecoSystem.addDonor(donor);
        dB4OUtil.storeSystem(ecoSystem);
        populateDonorTable();


        //        if (txtFullName.getText().equals("") || txtUsrName.getText().equals("") || txtPass.getText().equals("") || txtNo.getText().equals("")
            //            || txtAdd.getText().equals("") || txtCity.getText().equals("") || txtState.getText().equals("") || txtZip.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "All fields are mandatory.");
            //        } else if (!name_chk.getText().equals("") || !telenum_chk.getText().equals("") || !add_chk.getText().equals("") || !city_chk.getText().equals("")
            //            || !state_chk.getText().equals("") || !zip_chk.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "Invalid value(s) entered.");
            //        }
        //        else{
            //            Address add = new Address(txtAdd.getText(), txtCity.getText(), txtState.getText(), Integer.parseInt(txtZip.getText()));
            //
            //            Customer cus =new Customer(txtUsrName.getText(), txtPass.getText(), new CustomerRole(),txtNo.getText(), txtFullName.getText(), add);
            //            system.addCustomer(cus);
            //
            //            dB4OUtil.storeSystem(system);
            //            JOptionPane.showMessageDialog(this, "Customer information saved.");
            //            MainJFrame cust = new MainJFrame();
            //            ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
            //            cust.setVisible(true);
            //        }
    }//GEN-LAST:event_btn_signupActionPerformed

    private void txtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameActionPerformed

    private void txtFullNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullNameKeyReleased
        // TODO add your handling code here:
        //        String nameconv = "^[a-zA-Z ]{1,17}$";
        //        Pattern pat = Pattern.compile(nameconv);
        //        Matcher mat = pat.matcher(txtFullName.getText());
        //
        //        if (!mat.matches()) {
            //            name_chk.setText("Name is incorrect");
            //        } else {
            //            name_chk.setText("");
            //        }
    }//GEN-LAST:event_txtFullNameKeyReleased

    private void txtUsrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrNameActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoActionPerformed

    private void txtNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoKeyReleased
        // TODO add your handling code here:
        //        String teleconv = "^(\\d{3}[- .]?){2}\\d{4}$";
        //        Pattern pat = Pattern.compile(teleconv);
        //        Matcher mat = pat.matcher(txtNo.getText());
        //
        //        if (!mat.matches()) {
            //            telenum_chk.setText("No. is incorrect");
            //        } else {
            //            telenum_chk.setText("");
            //        }
    }//GEN-LAST:event_txtNoKeyReleased

    private void btn_signup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_signup1ActionPerformed
        // TODO add your handling code here:
        String address = txtAdd.getText() + txtCity.getText() + txtState.getText() + txtZip.getText();
        DonorInventory donbank = new DonorInventory(txtFullName.getText(), txtNo.getText(), address, txtUsrName.getText(), txtPass.getText());
        //System.out.println("Hospital"+hosp.getUsername());

        ecoSystem.addDonorBank(donbank);
        dB4OUtil.storeSystem(ecoSystem);
        populateDonorBankTable();
        
        //        if (txtFullName.getText().equals("") || txtUsrName.getText().equals("") || txtPass.getText().equals("") || txtNo.getText().equals("")
            //            || txtAdd.getText().equals("") || txtCity.getText().equals("") || txtState.getText().equals("") || txtZip.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "All fields are mandatory.");
            //        } else if (!name_chk.getText().equals("") || !telenum_chk.getText().equals("") || !add_chk.getText().equals("") || !city_chk.getText().equals("")
            //            || !state_chk.getText().equals("") || !zip_chk.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "Invalid value(s) entered.");
            //        }
        //        else{
            //            Address add = new Address(txtAdd.getText(), txtCity.getText(), txtState.getText(), Integer.parseInt(txtZip.getText()));
            //
            //            Customer cus =new Customer(txtUsrName.getText(), txtPass.getText(), new CustomerRole(),txtNo.getText(), txtFullName.getText(), add);
            //            system.addCustomer(cus);
            //
            //            dB4OUtil.storeSystem(system);
            //            JOptionPane.showMessageDialog(this, "Customer information saved.");
            //            MainJFrame cust = new MainJFrame();
            //            ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
            //            cust.setVisible(true);
            //        }
    }//GEN-LAST:event_btn_signup1ActionPerformed

    private void viewDonorbankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDonorbankActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=donorBankDets.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) donorBankDets.getModel();
        String dname = model.getValueAt(selectedRowIndex1, 2).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
        DonorInventory h = (DonorInventory)model.getValueAt(selectedRowIndex1, 2);
        txtFullName.setText(h.getEnterpriseName());
        txtUsrName.setText(h.getUsername());
        txtPass.setText(String.valueOf(h.getPassword()));
        txtNo.setText(String.valueOf(h.getRegistrationNo()));
        txtAdd.setText(h.getAddress());
    }//GEN-LAST:event_viewDonorbankActionPerformed

    private void updateDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDocActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=donorBankDets.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) donorBankDets.getModel();
        DonorInventory d = (DonorInventory)model.getValueAt(selectedRowIndex1, 2);
        

        
        String address = txtAdd1.getText() + txtCity1.getText() + txtState.getText() + txtZip.getText();
        //        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
        d.setAddress(address);
        d.setEnterpriseName(txtFullName.getText());
        d.setUsername(txtUsrName.getText());
        d.setPassword(txtPass.getText());
        d.setRegistrationNo(txtNo.getText());
        //        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("DonorInventory Updated");
        populateDonorBankTable();

    }//GEN-LAST:event_updateDocActionPerformed

    private void updateDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDoc1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=donorDets.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) donorDets.getModel();
        DonorDetails d = (DonorDetails)model.getValueAt(selectedRowIndex1, 1);
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);

        for(DonorDetails e:ecoSystem.getDonordirectory()){
            if(randomEncId.equals(e.getId())){

                randomEncId =String.valueOf(Math.random()*999+100);
            }

        }
        String address = txtAdd1.getText() + txtCity1.getText() + txtState1.getText() + txtZip1.getText();
        //        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
        d.setAdd(address);
        d.setName(txtFullName1.getText());
        d.setEmaildId(txtUsrName1.getText());
        d.setPswd(txtPass1.getText());
        d.setGender(cmb_gender.getSelectedItem().toString());
        d.setContactNo(txt_telenum.getText());
        d.setDob(jDateChooser1.getDate());
        d.setInventoryName(cmb_donorbnkname.getSelectedItem().toString());
        //        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Donor Updated");
        populateDonorTable();

    }//GEN-LAST:event_updateDoc1ActionPerformed

    private void viewDonorbank1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDonorbank1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=donorDets.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) donorDets.getModel();
//        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
//        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
//        Doctor d = ecoSystem.findDoctorByUserName(docName);
        DonorDetails d= (DonorDetails)model.getValueAt(selectedRowIndex1, 1);
        txtFullName1.setText(d.getName());
        txtUsrName1.setText(d.getEmaildId());
//        txtPass.setText(String.valueOf(d.getPswd()));
        cmb_gender.setName(d.getGender());
        txt_telenum.setText(String.valueOf(d.getContactNo()));
        txtAdd1.setText(d.getAdd());
        jDateChooser1.setDate(d.getDob());
        
        cmb_donorbnkname.setSelectedItem(d.getInventoryName());
    }//GEN-LAST:event_viewDonorbank1ActionPerformed

    private void populateDonorTable() {
        DefaultTableModel model = (DefaultTableModel) donorDets.getModel();
        model.setRowCount(0);

        for (DonorDetails d : ecoSystem.getDonordirectory()) {

            Object[] row = new Object[5];
            row[0] = d.getEmaildId();
            row[1] = d;
            row[2] = d.getMedicalHis();
            row[3]= d.getInventoryName();
            row[4] = d.getPswd();
            model.addRow(row);

        }

    }
    
    private void populateDonorBankTable() {
        DefaultTableModel model = (DefaultTableModel) donorBankDets.getModel();
        model.setRowCount(0);

        for (DonorInventory d : ecoSystem.getDonorbankdirectory()) {

            Object[] row = new Object[5];
            row[0] = d.getUsername();
            row[1] = d.getRegistrationNo();
            row[2] = d;
            row[3] = d.getPassword();
            model.addRow(row);

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_signup;
    private javax.swing.JButton btn_signup1;
    private javax.swing.JComboBox<String> cmb_donorbnkname;
    private javax.swing.JComboBox<String> cmb_gender;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton delDonorDets;
    private javax.swing.JTable donorBankDets;
    private javax.swing.JTable donorDets;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_address1;
    private javax.swing.JLabel lbl_donorbnkname;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_name1;
    private javax.swing.JLabel lbl_pswd;
    private javax.swing.JLabel lbl_pswd1;
    private javax.swing.JLabel lbl_registeryNum;
    private javax.swing.JLabel lbl_telenum;
    private javax.swing.JLabel lbl_uname;
    private javax.swing.JLabel lbl_uname1;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtFullName1;
    private javax.swing.JTextField txtNo;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtState1;
    private javax.swing.JTextField txtUsrName;
    private javax.swing.JTextField txtUsrName1;
    private javax.swing.JTextField txtZip;
    private javax.swing.JTextField txtZip1;
    private javax.swing.JLabel txt_City;
    private javax.swing.JLabel txt_City1;
    private javax.swing.JLabel txt_Zip;
    private javax.swing.JLabel txt_Zip1;
    private javax.swing.JLabel txt_state;
    private javax.swing.JLabel txt_state1;
    private javax.swing.JTextField txt_telenum;
    private javax.swing.JButton updateDoc;
    private javax.swing.JButton updateDoc1;
    private javax.swing.JButton viewDonorbank;
    private javax.swing.JButton viewDonorbank1;
    // End of variables declaration//GEN-END:variables
}
