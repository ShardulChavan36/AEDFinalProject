/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Admin;

import model.DB4OUtil.DB4OUtil;
import model.EcoSystem.EcoSystem;
import model.Enterprise.TransportLogistics.Handler;
import model.Enterprise.TransportLogistics.Vehicle;
//import model.Firebase.FirebaseHelper;
import UI.MainFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Shardul
 */
public class ManageLogistics extends javax.swing.JPanel {

    /**
     * Creates new form ManageLogistics
     */
    MainFrame mainFrame;
//    FirebaseHelper firebaseHelper;
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil;

    public ManageLogistics(MainFrame mainFrame, DB4OUtil dB4OUtil, EcoSystem ecoSystem) {
        initComponents();
        this.mainFrame = mainFrame;
        this.dB4OUtil = dB4OUtil;
        this.ecoSystem = ecoSystem;
        populateHandlerTable();
        populateVehicleTable();
        for(Vehicle h: ecoSystem.getVehicledirectory()){
            String s = h.getVehicleNo()+"| " + h.getVehicleName()+" | "+ h.getVehicleType();
            cmb_vehicle.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        DeleteHandler = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb2 = new javax.swing.JTable();
        DeleteVehicle = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFullName1 = new javax.swing.JTextField();
        lbl_name1 = new javax.swing.JLabel();
        lbl_uname1 = new javax.swing.JLabel();
        txtUsrName1 = new javax.swing.JTextField();
        txtPass1 = new javax.swing.JPasswordField();
        lbl_pswd1 = new javax.swing.JLabel();
        lbl_gender = new javax.swing.JLabel();
        cmb_gender = new javax.swing.JComboBox<>();
        txt_telenum = new javax.swing.JTextField();
        lbl_telenum = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        cmb_vehicle = new javax.swing.JComboBox<>();
        lbl_donorbnkname = new javax.swing.JLabel();
        txtAdd1 = new javax.swing.JTextField();
        lbl_address1 = new javax.swing.JLabel();
        txt_City1 = new javax.swing.JLabel();
        txtCity1 = new javax.swing.JTextField();
        txtState1 = new javax.swing.JTextField();
        txt_state1 = new javax.swing.JLabel();
        txt_Zip1 = new javax.swing.JLabel();
        txtZip1 = new javax.swing.JTextField();
        lbl_uname = new javax.swing.JLabel();
        txtUsrName = new javax.swing.JTextField();
        lbl_name = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        txtType = new javax.swing.JTextField();
        lbl_address = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        txt_City = new javax.swing.JLabel();
        btn_signup = new javax.swing.JButton();
        btn_signup1 = new javax.swing.JButton();
        viewHandler = new javax.swing.JButton();
        updateDoc1 = new javax.swing.JButton();
        viewVehicle = new javax.swing.JButton();
        updateVehicle = new javax.swing.JButton();

        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.default.hoverBorderColor"));

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Contact", "ID", "Pswd"
            }
        ));
        jScrollPane1.setViewportView(tb1);

        DeleteHandler.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteHandler.setText("Delete");
        DeleteHandler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteHandlerActionPerformed(evt);
            }
        });

        tb2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Vehicle Number", "Vehicle Name", "Vehicle Type", "Description"
            }
        ));
        jScrollPane2.setViewportView(tb2);

        DeleteVehicle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteVehicle.setText("Delete");
        DeleteVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteVehicleActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Handler Details");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Vehicle Details");

        txtFullName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullName1ActionPerformed(evt);
            }
        });
        txtFullName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullName1KeyReleased(evt);
            }
        });

        lbl_name1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name1.setText("Name:");

        lbl_uname1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_uname1.setText("Username:");

        txtUsrName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrName1ActionPerformed(evt);
            }
        });

        txtPass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPass1ActionPerformed(evt);
            }
        });

        lbl_pswd1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_pswd1.setText("Password:");

        lbl_gender.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_gender.setText("Gender:");

        cmb_gender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmb_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        txt_telenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telenumActionPerformed(evt);
            }
        });
        txt_telenum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_telenumKeyReleased(evt);
            }
        });

        lbl_telenum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_telenum.setText("Phone no.:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Date of Birth:");

        cmb_vehicle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        lbl_donorbnkname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_donorbnkname.setText("Vehicle List:");

        txtAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd1ActionPerformed(evt);
            }
        });
        txtAdd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd1KeyReleased(evt);
            }
        });

        lbl_address1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address1.setText("Address:");

        txt_City1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City1.setText("City:");

        txtCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCity1ActionPerformed(evt);
            }
        });
        txtCity1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCity1KeyReleased(evt);
            }
        });

        txtState1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtState1ActionPerformed(evt);
            }
        });
        txtState1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtState1KeyReleased(evt);
            }
        });

        txt_state1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state1.setText("State:");

        txt_Zip1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip1.setText("Zip Code:");

        txtZip1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZip1ActionPerformed(evt);
            }
        });
        txtZip1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtZip1KeyReleased(evt);
            }
        });

        lbl_uname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_uname.setText("Vehicle Number:");

        txtUsrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrNameActionPerformed(evt);
            }
        });

        lbl_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name.setText("Vehicle Name:");

        txtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameActionPerformed(evt);
            }
        });
        txtFullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullNameKeyReleased(evt);
            }
        });

        txtType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeActionPerformed(evt);
            }
        });
        txtType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTypeKeyReleased(evt);
            }
        });

        lbl_address.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address.setText("Vehicle Type:");

        txtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescActionPerformed(evt);
            }
        });
        txtDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescKeyReleased(evt);
            }
        });

        txt_City.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City.setText("Description:");

        btn_signup.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_signup.setText("Sign Up");
        btn_signup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_signupActionPerformed(evt);
            }
        });

        btn_signup1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_signup1.setText("Sign Up");
        btn_signup1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_signup1ActionPerformed(evt);
            }
        });

        viewHandler.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewHandler.setText("View");
        viewHandler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHandlerActionPerformed(evt);
            }
        });

        updateDoc1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateDoc1.setText("Update");
        updateDoc1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateDoc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDoc1ActionPerformed(evt);
            }
        });

        viewVehicle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewVehicle.setText("View");
        viewVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewVehicleActionPerformed(evt);
            }
        });

        updateVehicle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateVehicle.setText("Update");
        updateVehicle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVehicleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btn_signup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(viewHandler, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(DeleteHandler, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(updateDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbl_name1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtFullName1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbl_uname1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtUsrName1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(lbl_uname)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtUsrName))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(lbl_name)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_address, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txt_City, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btn_signup1)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(DeleteVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(viewVehicle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(updateVehicle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_gender)
                                        .addGap(20, 20, 20))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbl_telenum)
                                        .addGap(14, 14, 14))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbl_pswd1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmb_gender, 0, 220, Short.MAX_VALUE)
                            .addComponent(txt_telenum, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPass1))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_Zip1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(lbl_address1))
                                    .addComponent(txt_state1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_City1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtState1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtZip1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lbl_donorbnkname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmb_vehicle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(603, 921, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(btn_signup1)
                        .addGap(18, 18, 18)
                        .addComponent(viewVehicle)
                        .addGap(18, 18, 18)
                        .addComponent(updateVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteVehicle))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_name))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_uname)
                            .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_City)
                            .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_address)
                            .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_signup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewHandler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(DeleteHandler)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_vehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_donorbnkname))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_address1)
                            .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_City1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtState1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_state1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Zip1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFullName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_name1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsrName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_uname1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_pswd1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_gender)
                            .addComponent(cmb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_telenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_telenum))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(125, 125, 125))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteHandlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteHandlerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tb1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        String doctorUName = model.getValueAt(selectedRow, 0).toString();
        System.out.println(" handler uname: " + doctorUName);
        ecoSystem.deleteHandler(doctorUName);
        dB4OUtil.storeSystem(ecoSystem);
        populateHandlerTable();
    }//GEN-LAST:event_DeleteHandlerActionPerformed

    private void DeleteVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteVehicleActionPerformed
        // TODO add your handling code here:
        int selectedRow = tb2.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
//        Vehicle v=(Vehicle)model.getValueAt(selectedRow, 0);
        String v= model.getValueAt(selectedRow, 0).toString();
        System.out.println(" vehicle uname: " + v);
        ecoSystem.deleteVehicle(v);
        dB4OUtil.storeSystem(ecoSystem);
        populateVehicleTable();
    }//GEN-LAST:event_DeleteVehicleActionPerformed

    private void txtFullName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullName1ActionPerformed

    private void txtFullName1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullName1KeyReleased
        // TODO add your handling code here:
        //        String nameconv = "^[a-zA-Z ]{1,17}$";
        //        Pattern pat = Pattern.compile(nameconv);
        //        Matcher mat = pat.matcher(txtFullName.getText());
        //
        //        if (!mat.matches()) {
            //            name_chk.setText("Name is incorrect");
            //        } else {
            //            name_chk.setText("");
            //        }
    }//GEN-LAST:event_txtFullName1KeyReleased

    private void txtUsrName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrName1ActionPerformed

    private void txtPass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPass1ActionPerformed

    private void txt_telenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telenumActionPerformed

    private void txt_telenumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_telenumKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telenumKeyReleased

    private void txtAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd1ActionPerformed

    private void txtAdd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd1KeyReleased
        // TODO add your handling code here:

        //        String addrconv = "^[a-zA-Z0-9 ]{0,30}$";
        //        Pattern pat = Pattern.compile(addrconv);
        //        Matcher mat = pat.matcher(txtAdd.getText());
        //
        //        if (!mat.matches()) {
            //            add_chk.setText("Address is incorrect");
            //        } else {
            //            add_chk.setText("");
            //        }
    }//GEN-LAST:event_txtAdd1KeyReleased

    private void txtCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity1ActionPerformed

    private void txtCity1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCity1KeyReleased
        // TODO add your handling code here:
        //        String cityconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(cityconv);
        //        Matcher mat = pat.matcher(txtCity.getText());
        //
        //        if (!mat.matches()) {
            //            city_chk.setText("City is incorrect");
            //        } else {
            //            city_chk.setText("");
            //        }
    }//GEN-LAST:event_txtCity1KeyReleased

    private void txtState1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtState1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState1ActionPerformed

    private void txtState1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtState1KeyReleased
        // TODO add your handling code here:

        //        String stateconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(stateconv);
        //        Matcher mat = pat.matcher(txtState.getText());
        //
        //        if (!mat.matches()) {
            //            state_chk.setText("State is incorrect");
            //        } else {
            //            state_chk.setText("");
            //        }
    }//GEN-LAST:event_txtState1KeyReleased

    private void txtZip1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZip1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip1ActionPerformed

    private void txtZip1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZip1KeyReleased
        // TODO add your handling code here:
        //        String zipconv = "^[0-9]{5}$";
        //        Pattern pat = Pattern.compile(zipconv);
        //        Matcher mat = pat.matcher(txtZip.getText());
        //
        //        if (!mat.matches()) {
            //            zip_chk.setText("Zipcode is incorrect");
            //        } else {
            //            zip_chk.setText("");
            //        }
    }//GEN-LAST:event_txtZip1KeyReleased

    private void txtUsrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrNameActionPerformed

    private void txtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameActionPerformed

    private void txtFullNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullNameKeyReleased
        // TODO add your handling code here:
        //        String nameconv = "^[a-zA-Z ]{1,17}$";
        //        Pattern pat = Pattern.compile(nameconv);
        //        Matcher mat = pat.matcher(txtFullName.getText());
        //
        //        if (!mat.matches()) {
            //            name_chk.setText("Name is incorrect");
            //        } else {
            //            name_chk.setText("");
            //        }
    }//GEN-LAST:event_txtFullNameKeyReleased

    private void txtTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTypeActionPerformed

    private void txtTypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTypeKeyReleased
        // TODO add your handling code here:

        //        String addrconv = "^[a-zA-Z0-9 ]{0,30}$";
        //        Pattern pat = Pattern.compile(addrconv);
        //        Matcher mat = pat.matcher(txtAdd.getText());
        //
        //        if (!mat.matches()) {
            //            add_chk.setText("Address is incorrect");
            //        } else {
            //            add_chk.setText("");
            //        }
    }//GEN-LAST:event_txtTypeKeyReleased

    private void txtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescActionPerformed

    private void txtDescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescKeyReleased
        // TODO add your handling code here:
        //        String cityconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(cityconv);
        //        Matcher mat = pat.matcher(txtCity.getText());
        //
        //        if (!mat.matches()) {
            //            city_chk.setText("City is incorrect");
            //        } else {
            //            city_chk.setText("");
            //        }
    }//GEN-LAST:event_txtDescKeyReleased

    private void btn_signupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_signupActionPerformed
        // TODO add your handling code here:
        String address = txtAdd1.getText() + txtCity1.getText() + txtState1.getText() + txtZip1.getText();
        //uname, pswd, id, name, add, gender, telenum, dob
        //(txtFullName.getText(), txtNo.getText(), address, txtUsrName.getText(), txtPass.getText());

        Handler handler = new Handler(txtUsrName.getText(), txtPass1.getText(), "idid", txtFullName.getText(), address,cmb_gender.getSelectedItem().toString(), txt_telenum.getText(), jDateChooser1.getDate(),ecoSystem.getVehicleByNumber(cmb_vehicle.getSelectedItem().toString()));
        System.out.println("handler " + handler.getVehicle().getVehicleName());
        ecoSystem.addHandler(handler);
        dB4OUtil.storeSystem(ecoSystem);
        populateHandlerTable();
        
        //        if (txtFullName.getText().equals("") || txtUsrName.getText().equals("") || txtPass.getText().equals("") || txtNo.getText().equals("")
            //            || txtAdd.getText().equals("") || txtCity.getText().equals("") || txtState.getText().equals("") || txtZip.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "All fields are mandatory.");
            //        } else if (!name_chk.getText().equals("") || !telenum_chk.getText().equals("") || !add_chk.getText().equals("") || !city_chk.getText().equals("")
            //            || !state_chk.getText().equals("") || !zip_chk.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "Invalid value(s) entered.");
            //        }
        //        else{
            //            Address add = new Address(txtAdd.getText(), txtCity.getText(), txtState.getText(), Integer.parseInt(txtZip.getText()));
            //
            //            Customer cus =new Customer(txtUsrName.getText(), txtPass.getText(), new CustomerRole(),txtNo.getText(), txtFullName.getText(), add);
            //            system.addCustomer(cus);
            //
            //            dB4OUtil.storeSystem(system);
            //            JOptionPane.showMessageDialog(this, "Customer information saved.");
            //            MainJFrame cust = new MainJFrame();
            //            ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
            //            cust.setVisible(true);
            //        }
    }//GEN-LAST:event_btn_signupActionPerformed

    private void btn_signup1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_signup1ActionPerformed
        // TODO add your handling code here:
        //String address = txtType.getText() + txtDesc.getText() + txtState.getText() + txtZip.getText();
        //String vehname, String vehnum, String vtype, String description
        //SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy");
        Vehicle vehicle = new Vehicle(txtFullName.getText(),txtUsrName.getText(),txtType.getText(),txtDesc.getText());

        ecoSystem.addVehicle(vehicle);
        dB4OUtil.storeSystem(ecoSystem);
        populateVehicleTable();

        
        //        if (txtFullName.getText().equals("") || txtUsrName.getText().equals("") || txtPass.getText().equals("") || txtNo.getText().equals("")
            //            || txtAdd.getText().equals("") || txtCity.getText().equals("") || txtState.getText().equals("") || txtZip.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "All fields are mandatory.");
            //        } else if (!name_chk.getText().equals("") || !telenum_chk.getText().equals("") || !add_chk.getText().equals("") || !city_chk.getText().equals("")
            //            || !state_chk.getText().equals("") || !zip_chk.getText().equals("")) {
            //
            //            JOptionPane.showMessageDialog(this, "Invalid value(s) entered.");
            //        }
        //        else{
            //            Address add = new Address(txtAdd.getText(), txtCity.getText(), txtState.getText(), Integer.parseInt(txtZip.getText()));
            //
            //            Customer cus =new Customer(txtUsrName.getText(), txtPass.getText(), new CustomerRole(),txtNo.getText(), txtFullName.getText(), add);
            //            system.addCustomer(cus);
            //
            //            dB4OUtil.storeSystem(system);
            //            JOptionPane.showMessageDialog(this, "Customer information saved.");
            //            MainJFrame cust = new MainJFrame();
            //            ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
            //            cust.setVisible(true);
            //        }
    }//GEN-LAST:event_btn_signup1ActionPerformed

    private void viewHandlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHandlerActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=tb1.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        //        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
        //        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
        //        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
        //        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
        //        Doctor d = ecoSystem.findDoctorByUserName(docName);
        Handler d= (Handler)model.getValueAt(selectedRowIndex1, 1);
        txtFullName1.setText(d.getName());
        txtUsrName1.setText(d.getEmaildId());
        txtPass1.setText(String.valueOf(d.getPswd()));
        cmb_gender.setName(d.getGender());
        txt_telenum.setText(String.valueOf(d.getContactNo()));
        txtAdd1.setText(d.getAdd());
        jDateChooser1.setDate(d.getDob());

        cmb_vehicle.setSelectedItem(d.getVehicle());
    }//GEN-LAST:event_viewHandlerActionPerformed

    private void updateDoc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDoc1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=tb1.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        Handler d = (Handler)model.getValueAt(selectedRowIndex1, 1);
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);

        for(Handler e:ecoSystem.getHandlerdirectory()){
            if(randomEncId.equals(e.getId())){

                randomEncId =String.valueOf(Math.random()*999+100);
            }

        }
        String address = txtAdd1.getText() + txtCity1.getText() + txtState1.getText() + txtZip1.getText();
        //        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
        d.setAdd(address);
        d.setName(txtFullName1.getText());
        d.setEmaildId(txtUsrName1.getText());
        d.setPswd(txtPass1.getText());
        d.setGender(cmb_gender.getSelectedItem().toString());
        d.setContactNo(txt_telenum.getText());
        d.setDob(jDateChooser1.getDate());
        d.setVehicle(ecoSystem.getVehicleByNumber(cmb_vehicle.getSelectedItem().toString()));
//        d.(cmb_vehicle.getSelectedItem().toString());
        //        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Handler Updated");
        populateHandlerTable();
    }//GEN-LAST:event_updateDoc1ActionPerformed

    private void viewVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewVehicleActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=tb2.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
        //        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
        //        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
        //        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
        //        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
        //        Doctor d = ecoSystem.findDoctorByUserName(docName);
        Vehicle d= (Vehicle)model.getValueAt(selectedRowIndex1, 1);
        txtFullName.setText(d.getVehicleName());
        txtUsrName.setText(d.getVehicleNo());
        //        txtPass.setText(String.valueOf(d.getPswd()));
        txtType.setText(d.getVehicleType());
        txtDesc.setText(d.getDesc());
       
        
        
    }//GEN-LAST:event_viewVehicleActionPerformed

    private void updateVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVehicleActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=tb2.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to Update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
        Vehicle d= (Vehicle)model.getValueAt(selectedRowIndex1, 1);
        d.setVehicleName(txtFullName.getText());
        d.setVehicleNo(txtUsrName.getText());
        d.setVehicleType(txtType.getText());
        d.setDesc(txtDesc.getText());
        populateVehicleTable();
    }//GEN-LAST:event_updateVehicleActionPerformed

    private void populateHandlerTable() {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);

        for (Handler d : ecoSystem.getHandlerdirectory()) {

            Object[] row = new Object[6];
            row[0] = d.getEmaildId();
            row[1] = d;
            row[2] = d.getContactNo();
            row[3] = d.getId();
            row[4] = d.getPswd();
            model.addRow(row);

        }

    }

    private void populateVehicleTable() {
        DefaultTableModel model = (DefaultTableModel) tb2.getModel();
        model.setRowCount(0);

        for (Vehicle d : ecoSystem.getVehicledirectory()) {

            Object[] row = new Object[5];
            row[0] = d.getVehicleNo();
            row[1] = d;
            row[2] = d.getVehicleType();
            row[3] = d.getDesc();
           
            model.addRow(row);

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteHandler;
    private javax.swing.JButton DeleteVehicle;
    private javax.swing.JButton btn_signup;
    private javax.swing.JButton btn_signup1;
    private javax.swing.JComboBox<String> cmb_gender;
    private javax.swing.JComboBox<String> cmb_vehicle;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_address1;
    private javax.swing.JLabel lbl_donorbnkname;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_name1;
    private javax.swing.JLabel lbl_pswd1;
    private javax.swing.JLabel lbl_telenum;
    private javax.swing.JLabel lbl_uname;
    private javax.swing.JLabel lbl_uname1;
    private javax.swing.JTable tb1;
    private javax.swing.JTable tb2;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtFullName1;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JTextField txtState1;
    private javax.swing.JTextField txtType;
    private javax.swing.JTextField txtUsrName;
    private javax.swing.JTextField txtUsrName1;
    private javax.swing.JTextField txtZip1;
    private javax.swing.JLabel txt_City;
    private javax.swing.JLabel txt_City1;
    private javax.swing.JLabel txt_Zip1;
    private javax.swing.JLabel txt_state1;
    private javax.swing.JTextField txt_telenum;
    private javax.swing.JButton updateDoc1;
    private javax.swing.JButton updateVehicle;
    private javax.swing.JButton viewHandler;
    private javax.swing.JButton viewVehicle;
    // End of variables declaration//GEN-END:variables
}
