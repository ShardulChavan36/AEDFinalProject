/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Admin;

import UI.MainFrame;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.DB4OUtil.DB4OUtil;
import model.EcoSystem.EcoSystem;
import model.Enterprise.Hospital.Hospital;
//import model.Firebase.FirebaseHelper;
import model.Enterprise.Hospital.Doctor;

import model.Enterprise.Hospital.Nurse;
import model.Enterprise.Hospital.Patient;

/**
 *
 * @author Shardul
 */
public class ManageAdminHosp extends javax.swing.JPanel {
    MainFrame mainFrame;
//    FirebaseHelper firebaseHelper;
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil;
    /**
     * Creates new form ManageAdminHosp
     */
    public ManageAdminHosp(MainFrame mainFrame, DB4OUtil dB4OUtil, EcoSystem ecoSystem) {
        initComponents();
        this.mainFrame = mainFrame;
        this.dB4OUtil = dB4OUtil;
        this.ecoSystem = ecoSystem;
        System.out.println("Why");
        populateTable();
        System.out.println("Why");
        for(Hospital h: ecoSystem.getHospitaldirectory().getHospitalList()){
            hospitalList.addItem(h.getEnterpriseName());
        }
        for(Hospital h: ecoSystem.getHospitaldirectory().getHospitalList()){
            hospitalList1.addItem(h.getEnterpriseName());
        }
        for(Hospital h: ecoSystem.getHospitaldirectory().getHospitalList()){
            hospitalList2.addItem(h.getEnterpriseName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        patientLogoutBtn1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        createHosp = new javax.swing.JButton();
        viewHosp = new javax.swing.JButton();
        updateHosp = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        HospTable = new javax.swing.JTable();
        txtFullName = new javax.swing.JTextField();
        lbl_name = new javax.swing.JLabel();
        lbl_uname = new javax.swing.JLabel();
        txtUsrName = new javax.swing.JTextField();
        lbl_pswd = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        lbl_registeryNum = new javax.swing.JLabel();
        txtNo = new javax.swing.JTextField();
        lbl_address = new javax.swing.JLabel();
        txt_City = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txtAdd = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txt_state = new javax.swing.JLabel();
        txt_Zip = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();
        lbl_address1 = new javax.swing.JLabel();
        txt_City1 = new javax.swing.JLabel();
        txtCity1 = new javax.swing.JTextField();
        txtAdd1 = new javax.swing.JTextField();
        createDoc = new javax.swing.JButton();
        viewDoc = new javax.swing.JButton();
        updateDoc = new javax.swing.JButton();
        delDoc = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        DocTable = new javax.swing.JTable();
        DocDets = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        doctorName = new javax.swing.JTextField();
        doctorContact = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        doctorSpecialization = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtUsrName2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        doctorContact3 = new javax.swing.JTextField();
        txtState2 = new javax.swing.JTextField();
        txt_state2 = new javax.swing.JLabel();
        txt_Zip2 = new javax.swing.JLabel();
        txtZip2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        nurseTable = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        txtAdd2 = new javax.swing.JTextField();
        lbl_address2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        txtState3 = new javax.swing.JTextField();
        txt_state3 = new javax.swing.JLabel();
        txt_Zip3 = new javax.swing.JLabel();
        txtAdd3 = new javax.swing.JTextField();
        txtZip3 = new javax.swing.JTextField();
        delNurse = new javax.swing.JButton();
        DocDets1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nurseName = new javax.swing.JTextField();
        nurseContact = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        txtUsrName3 = new javax.swing.JTextField();
        nurseGender = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        viewNurse = new javax.swing.JButton();
        lbl_address3 = new javax.swing.JLabel();
        createNurse = new javax.swing.JButton();
        updateNurse = new javax.swing.JButton();
        txt_City2 = new javax.swing.JLabel();
        txtCity2 = new javax.swing.JTextField();
        createPat = new javax.swing.JButton();
        viewPat = new javax.swing.JButton();
        updatePat = new javax.swing.JButton();
        delPat = new javax.swing.JButton();
        DocDets2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        patName = new javax.swing.JTextField();
        patContact = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        patUsrName4 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        patGender = new javax.swing.JTextField();
        patPwd = new javax.swing.JTextField();
        lbl_address7 = new javax.swing.JLabel();
        txtAdd4 = new javax.swing.JTextField();
        lbl_address4 = new javax.swing.JLabel();
        txt_City3 = new javax.swing.JLabel();
        patCity = new javax.swing.JTextField();
        txt_state4 = new javax.swing.JLabel();
        patState = new javax.swing.JTextField();
        txt_Zip4 = new javax.swing.JLabel();
        patZip = new javax.swing.JTextField();
        lbl_name1 = new javax.swing.JLabel();
        hospitalList = new javax.swing.JComboBox<>();
        txtAdd5 = new javax.swing.JTextField();
        lbl_address5 = new javax.swing.JLabel();
        hospitalList1 = new javax.swing.JComboBox<>();
        lbl_name2 = new javax.swing.JLabel();
        txtAdd6 = new javax.swing.JTextField();
        lbl_address6 = new javax.swing.JLabel();
        hospitalList2 = new javax.swing.JComboBox<>();
        lbl_name3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(2023, 1600));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(32767, 32767));

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 1200));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setVerifyInputWhenFocusTarget(false);

        patientLogoutBtn1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        patientLogoutBtn1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        patientLogoutBtn1.setText("Logout");
        patientLogoutBtn1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        patientLogoutBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientLogoutBtn1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Admin Hospital Management");

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        createHosp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createHosp.setText("Create Hospital");
        createHosp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHospActionPerformed(evt);
            }
        });

        viewHosp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewHosp.setText("View Hospital");
        viewHosp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHospActionPerformed(evt);
            }
        });

        updateHosp.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateHosp.setText("Update Hospital");
        updateHosp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateHosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospActionPerformed(evt);
            }
        });

        HospTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hospital name", "User ID", "Registration No.", "Address", "Pswd"
            }
        ));
        jScrollPane3.setViewportView(HospTable);

        txtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameActionPerformed(evt);
            }
        });
        txtFullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullNameKeyReleased(evt);
            }
        });

        lbl_name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name.setText("Hospital Name:");

        lbl_uname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_uname.setText("Username:");

        txtUsrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrNameActionPerformed(evt);
            }
        });

        lbl_pswd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_pswd.setText("Password:");

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        lbl_registeryNum.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_registeryNum.setText("Registration No.:");

        txtNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoActionPerformed(evt);
            }
        });
        txtNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoKeyReleased(evt);
            }
        });

        lbl_address.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address.setText("Address:");

        txt_City.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City.setText("City:");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCityKeyReleased(evt);
            }
        });

        txtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddActionPerformed(evt);
            }
        });
        txtAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddKeyReleased(evt);
            }
        });

        txtState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStateActionPerformed(evt);
            }
        });
        txtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStateKeyReleased(evt);
            }
        });

        txt_state.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state.setText("State:");

        txt_Zip.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip.setText("Zip Code:");

        txtZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipActionPerformed(evt);
            }
        });
        txtZip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtZipKeyReleased(evt);
            }
        });

        lbl_address1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address1.setText("Address:");

        txt_City1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City1.setText("City:");

        txtCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCity1ActionPerformed(evt);
            }
        });
        txtCity1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCity1KeyReleased(evt);
            }
        });

        txtAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd1ActionPerformed(evt);
            }
        });
        txtAdd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd1KeyReleased(evt);
            }
        });

        createDoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createDoc.setText("Create Doctor");
        createDoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDocActionPerformed(evt);
            }
        });

        viewDoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewDoc.setText("View Doctor");
        viewDoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDocActionPerformed(evt);
            }
        });

        updateDoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateDoc.setText("Update Doctor");
        updateDoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDocActionPerformed(evt);
            }
        });

        delDoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        delDoc.setText("Delete Doctor");
        delDoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delDocActionPerformed(evt);
            }
        });

        DocTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Name", "UserName", "Hospital Name", "Address", "Pswd", "Doctor Id"
            }
        ));
        jScrollPane5.setViewportView(DocTable);

        DocDets.setBackground(new java.awt.Color(184, 216, 246));
        DocDets.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        jLabel3.setText("Name");

        jLabel4.setText("Contact");

        doctorName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorNameKeyTyped(evt);
            }
        });

        doctorContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorContactKeyTyped(evt);
            }
        });

        jLabel8.setText("DOB");

        jLabel10.setText("Specialization");

        jLabel14.setText("Email ID");

        txtUsrName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrName2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Gender");

        doctorContact3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorContact3KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout DocDetsLayout = new javax.swing.GroupLayout(DocDets);
        DocDets.setLayout(DocDetsLayout);
        DocDetsLayout.setHorizontalGroup(
            DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocDetsLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocDetsLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11)
                        .addGap(60, 60, 60)
                        .addComponent(doctorContact3))
                    .addGroup(DocDetsLayout.createSequentialGroup()
                        .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DocDetsLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(31, 31, 31)
                                .addComponent(doctorSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DocDetsLayout.createSequentialGroup()
                                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel14))
                                .addGap(60, 60, 60)
                                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(doctorName, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(doctorContact)
                                    .addComponent(txtUsrName2))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DocDetsLayout.setVerticalGroup(
            DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocDetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorContact3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtUsrName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(DocDetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(doctorSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtState2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtState2ActionPerformed(evt);
            }
        });
        txtState2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtState2KeyReleased(evt);
            }
        });

        txt_state2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state2.setText("State:");

        txt_Zip2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip2.setText("Zip Code:");

        txtZip2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZip2ActionPerformed(evt);
            }
        });
        txtZip2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtZip2KeyReleased(evt);
            }
        });

        nurseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nurse Name", "User ID", "Hospital Name", "Address", "Pswd"
            }
        ));
        jScrollPane4.setViewportView(nurseTable);

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd2ActionPerformed(evt);
            }
        });
        txtAdd2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd2KeyReleased(evt);
            }
        });

        lbl_address2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address2.setText("Apt No.");

        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "User ID", "Hospital Name", "Address", "Pswd", "Diagnosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(patientTable);

        txtState3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtState3ActionPerformed(evt);
            }
        });
        txtState3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtState3KeyReleased(evt);
            }
        });

        txt_state3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state3.setText("State:");

        txt_Zip3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip3.setText("Zip Code:");

        txtAdd3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd3ActionPerformed(evt);
            }
        });
        txtAdd3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd3KeyReleased(evt);
            }
        });

        txtZip3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZip3ActionPerformed(evt);
            }
        });
        txtZip3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtZip3KeyReleased(evt);
            }
        });

        delNurse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        delNurse.setText("Delete Nurse");
        delNurse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delNurse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delNurseActionPerformed(evt);
            }
        });

        DocDets1.setBackground(new java.awt.Color(184, 216, 246));
        DocDets1.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        jLabel5.setText("Name");

        jLabel6.setText("Contact");

        nurseName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nurseNameKeyTyped(evt);
            }
        });

        nurseContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nurseContactKeyTyped(evt);
            }
        });

        jLabel9.setText("DOB");

        jLabel15.setText("Email ID");

        txtUsrName3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrName3ActionPerformed(evt);
            }
        });

        nurseGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nurseGenderKeyTyped(evt);
            }
        });

        jLabel16.setText("Gender");

        javax.swing.GroupLayout DocDets1Layout = new javax.swing.GroupLayout(DocDets1);
        DocDets1.setLayout(DocDets1Layout);
        DocDets1Layout.setHorizontalGroup(
            DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocDets1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(30, 30, 30)
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(nurseGender)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nurseName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(nurseContact, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUsrName3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        DocDets1Layout.setVerticalGroup(
            DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocDets1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nurseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nurseContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nurseGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(8, 8, 8)
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtUsrName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        viewNurse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewNurse.setText("View Nurse");
        viewNurse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewNurse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewNurseActionPerformed(evt);
            }
        });

        lbl_address3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address3.setText("Address:");

        createNurse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createNurse.setText("Create Nurse");
        createNurse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createNurse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNurseActionPerformed(evt);
            }
        });

        updateNurse.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateNurse.setText("Update Nurse");
        updateNurse.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateNurse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateNurseActionPerformed(evt);
            }
        });

        txt_City2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City2.setText("City:");

        txtCity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCity2ActionPerformed(evt);
            }
        });
        txtCity2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCity2KeyReleased(evt);
            }
        });

        createPat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createPat.setText("Create Patient");
        createPat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPatActionPerformed(evt);
            }
        });

        viewPat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewPat.setText("View Patient");
        viewPat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatActionPerformed(evt);
            }
        });

        updatePat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updatePat.setText("Update Patient");
        updatePat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updatePat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatActionPerformed(evt);
            }
        });

        delPat.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        delPat.setText("Delete Patient");
        delPat.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        delPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delPatActionPerformed(evt);
            }
        });

        DocDets2.setBackground(new java.awt.Color(184, 216, 246));
        DocDets2.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        jLabel7.setText("Name");

        jLabel12.setText("Contact");

        patName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patNameKeyTyped(evt);
            }
        });

        patContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patContactKeyTyped(evt);
            }
        });

        jLabel13.setText("DOB");

        jLabel17.setText("Email ID");

        patUsrName4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patUsrName4ActionPerformed(evt);
            }
        });

        jLabel18.setText("Gender");

        patGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patGenderKeyTyped(evt);
            }
        });

        patPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patPwdActionPerformed(evt);
            }
        });
        patPwd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patPwdKeyReleased(evt);
            }
        });

        lbl_address7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address7.setText("Password");

        javax.swing.GroupLayout DocDets2Layout = new javax.swing.GroupLayout(DocDets2);
        DocDets2.setLayout(DocDets2Layout);
        DocDets2Layout.setHorizontalGroup(
            DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocDets2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DocDets2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(60, 60, 60)
                        .addComponent(patUsrName4))
                    .addGroup(DocDets2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(63, 63, 63)
                        .addComponent(patContact))
                    .addGroup(DocDets2Layout.createSequentialGroup()
                        .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(DocDets2Layout.createSequentialGroup()
                                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel13))
                                .addGap(73, 73, 73)
                                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(DocDets2Layout.createSequentialGroup()
                                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_address7)
                                    .addComponent(jLabel18))
                                .addGap(51, 51, 51)
                                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patGender)
                                    .addComponent(patPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DocDets2Layout.setVerticalGroup(
            DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DocDets2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(patUsrName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_address7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DocDets2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)))
        );

        txtAdd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd4ActionPerformed(evt);
            }
        });
        txtAdd4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd4KeyReleased(evt);
            }
        });

        lbl_address4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address4.setText("Address:");

        txt_City3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_City3.setText("City:");

        patCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patCityActionPerformed(evt);
            }
        });
        patCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patCityKeyReleased(evt);
            }
        });

        txt_state4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_state4.setText("State:");

        patState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patStateActionPerformed(evt);
            }
        });
        patState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patStateKeyReleased(evt);
            }
        });

        txt_Zip4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txt_Zip4.setText("Zip Code:");

        patZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patZipActionPerformed(evt);
            }
        });
        patZip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                patZipKeyReleased(evt);
            }
        });

        lbl_name1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name1.setText("Hospital Name:");

        hospitalList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        hospitalList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalListActionPerformed(evt);
            }
        });

        txtAdd5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd5ActionPerformed(evt);
            }
        });
        txtAdd5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd5KeyReleased(evt);
            }
        });

        lbl_address5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address5.setText("Password");

        hospitalList1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        hospitalList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalList1ActionPerformed(evt);
            }
        });

        lbl_name2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name2.setText("Hospital Name:");

        txtAdd6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd6ActionPerformed(evt);
            }
        });
        txtAdd6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd6KeyReleased(evt);
            }
        });

        lbl_address6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_address6.setText("Password");

        hospitalList2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        hospitalList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalList2ActionPerformed(evt);
            }
        });

        lbl_name3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_name3.setText("Hospital Name:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(408, 408, 408)
                .addComponent(jLabel1)
                .addGap(296, 296, 296)
                .addComponent(patientLogoutBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(846, 846, 846))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addGap(14, 14, 14))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(DocDets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(37, 37, 37)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(lbl_address1)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(txt_Zip2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txt_state2))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtZip2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtState2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(txt_City1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lbl_name1)
                                                    .addComponent(lbl_address5))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(hospitalList, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(createDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(viewDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(58, 58, 58)
                                        .addComponent(updateDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)
                                        .addComponent(delDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(52, 52, 52)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(DocDets1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbl_address3)
                                                    .addComponent(txt_City2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_Zip3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lbl_address6))
                                                .addGap(42, 42, 42))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lbl_name2)
                                                    .addComponent(txt_state3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(txtCity2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(txtState3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(txtZip3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtAdd6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(hospitalList1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(createNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(viewNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(updateNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(delNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(26, 26, 26)
                                    .addComponent(lbl_uname, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(lbl_pswd, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(13, 13, 13)
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lbl_name)
                                    .addGap(12, 12, 12)
                                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_registeryNum)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(200, 200, 200)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_City, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_Zip, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_state)
                                .addGap(18, 18, 18)
                                .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_address)
                                    .addComponent(lbl_address2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(updateHosp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(viewHosp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(createPat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(viewPat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(updatePat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(delPat, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addComponent(DocDets2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(lbl_name3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(hospitalList2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txt_City3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txt_state4))
                                            .addComponent(txt_Zip4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lbl_address4)
                                                .addGap(8, 8, 8)))
                                        .addGap(33, 33, 33)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(patZip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(patState, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(patCity, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1533, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(patientLogoutBtn1))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(createHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(updateHosp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(lbl_uname))
                            .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(lbl_name))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_address)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_address2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(txt_City)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(lbl_pswd))
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_registeryNum)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_state)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Zip))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DocDets, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_name1)
                            .addComponent(hospitalList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_address5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_address1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_City1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtState2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_state2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZip2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Zip2)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_name2)
                                .addComponent(hospitalList1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtAdd6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_address6))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_address3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCity2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_City2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_state3)
                                .addComponent(txtState3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtZip3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_Zip3)))
                        .addComponent(DocDets1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(viewNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delNurse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(createDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viewDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_name3)
                            .addComponent(hospitalList2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_address4)
                            .addComponent(txtAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_City3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_state4)
                            .addComponent(patState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Zip4)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(viewPat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updatePat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(delPat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(createPat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(DocDets2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 2017, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1800, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) HospTable.getModel();
        model.setRowCount(0);
        System.out.println("In func");
        for (Hospital h : ecoSystem.getHospitaldirectory().getHospitalList()) {           
            Object[] row = new Object[5];
            row[0] = h.getEnterpriseName();
            row[1] = h.getUsername();
            row[2] = h.getRegistrationNo();
            row[3] = h.getAddress();
            row[4] = h.getPassword();
            model.addRow(row);
        }
    }
    private void patientLogoutBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientLogoutBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientLogoutBtn1ActionPerformed

    private void createHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHospActionPerformed
        // TODO add your handling code here:
        String address = txtAdd.getText() + txtCity.getText() + txtState.getText() + txtZip.getText();
        Hospital hosp = new Hospital(txtFullName.getText(), txtNo.getText(), address, txtUsrName.getText(), txtPass.getText());
        System.out.println("Hospital"+hosp.getUsername());

        ecoSystem.addHospital(hosp);
        for(Hospital h: ecoSystem.getHospitaldirectory().getHospitalList()){
            System.out.println("hosp: "+ h.getEnterpriseName());
        }
        dB4OUtil.storeSystem(ecoSystem);
        populateTable();
    }//GEN-LAST:event_createHospActionPerformed

    private void viewHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHospActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=HospTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) HospTable.getModel();
        String hospitalName = model.getValueAt(selectedRowIndex1, 0).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
        txtFullName.setText(h.getEnterpriseName());
        txtUsrName.setText(h.getUsername());
        txtPass.setText(String.valueOf(h.getPassword()));
        txtNo.setText(String.valueOf(h.getRegistrationNo()));
        txtAdd.setText(h.getAddress());
        populateDoctorTable(ecoSystem.getDoctordirectory(), hospitalName);
        populatePatientTable(ecoSystem.getPatientdirectory(), hospitalName);
        populateNurseTable(ecoSystem.getNursedirectory(), hospitalName);
        //        txtAdd2.setText(String.valueOf(selectedHosp.ad.getAptNo()));
        //        txtCity.setText(selectedHosp.ad.getCity());
        //        txtState.setText(selectedHosp.ad.state);
        //        txtZip.setText(String.valueOf(selectedHosp.ad.getZipCode()));
    }//GEN-LAST:event_viewHospActionPerformed
    private void populateDoctorTable(ArrayList<Doctor> doctors, String hosp) {
        DefaultTableModel model = (DefaultTableModel) DocTable.getModel();
        model.setRowCount(0);

        for (Doctor d : doctors) {
            
            Object[] row = new Object[6];
            if (d.getHospname().equals(hosp)) {

//                row[0] = d.getName();
                row[0]=d;
                row[1] = d.getEmaildId();
                row[2] = d.getHospname();
                row[3] = d.getAdd();
                row[4] = d.getPswd();
                row[5]=d.getId();
                model.addRow(row);
            }

            
        }

    }
    private void populateNurseTable(ArrayList<Nurse> nurse, String hosp) {
        System.out.println("In func"+hosp);
        DefaultTableModel model = (DefaultTableModel) nurseTable.getModel();
        model.setRowCount(0);

        for (Nurse d : nurse) {
            System.out.println(d.getHospname());
            Object[] row = new Object[6];
            if (d.getHospname().equals(hosp)) {
                row[0] = d;
                row[1] = d.getEmaildId();
                row[2] = d.getHospname();
                row[3] = d.getAdd();
                row[4] = d.getPswd();
                model.addRow(row);
            }

            
        }

    }

    private void populatePatientTable(ArrayList<Patient> patient, String hosp) {
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        model.setRowCount(0);

        for (Patient d : patient) {

            Object[] row = new Object[6];
            if (d.getHospname().equals(hosp)) {
                row[0] = d;
                row[1] = d.getEmaildId();
                row[2] = d.getHospname();
                row[3] = d.getAdd();
                row[4] = d.getPswd();
                row[5] = d.getDiagnosis();
                model.addRow(row);
            }

            
        }

    }
    private void txtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameActionPerformed

    private void txtFullNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullNameKeyReleased
        // TODO add your handling code here:
        //        String nameconv = "^[a-zA-Z ]{1,17}$";
        //        Pattern pat = Pattern.compile(nameconv);
        //        Matcher mat = pat.matcher(txtFullName.getText());
        //
        //        if (!mat.matches()) {
            //            name_chk.setText("Name is incorrect");
            //        } else {
            //            name_chk.setText("");
            //        }
    }//GEN-LAST:event_txtFullNameKeyReleased

    private void txtUsrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrNameActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoActionPerformed

    private void txtNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoKeyReleased
        // TODO add your handling code here:
        //        String teleconv = "^(\\d{3}[- .]?){2}\\d{4}$";
        //        Pattern pat = Pattern.compile(teleconv);
        //        Matcher mat = pat.matcher(txtNo.getText());
        //
        //        if (!mat.matches()) {
            //            telenum_chk.setText("No. is incorrect");
            //        } else {
            //            telenum_chk.setText("");
            //        }
    }//GEN-LAST:event_txtNoKeyReleased

    private void txtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddActionPerformed

    private void txtAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddKeyReleased
        // TODO add your handling code here:

        //        String addrconv = "^[a-zA-Z0-9 ]{0,30}$";
        //        Pattern pat = Pattern.compile(addrconv);
        //        Matcher mat = pat.matcher(txtAdd.getText());
        //
        //        if (!mat.matches()) {
            //            add_chk.setText("Address is incorrect");
            //        } else {
            //            add_chk.setText("");
            //        }
    }//GEN-LAST:event_txtAddKeyReleased

    private void txtAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd1ActionPerformed

    private void txtAdd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd1KeyReleased

    private void createDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDocActionPerformed
        // TODO add your handling code here:
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(Doctor e:ecoSystem.getDoctordirectory()){
            if(randomEncId.equals(e.getId())){
               
               randomEncId =String.valueOf(Math.random()*999+100);
            }
            
        }
        String address = txtAdd1.getText() + txtCity1.getText() + txtState2.getText() + txtZip2.getText();
        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
       
        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Doctor added");
        populateDoctorTable(ecoSystem.getDoctordirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_createDocActionPerformed

    private void updateDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDocActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=DocTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) DocTable.getModel();
        Doctor d = (Doctor)model.getValueAt(selectedRowIndex1, 0);
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(Doctor e:ecoSystem.getDoctordirectory()){
            if(randomEncId.equals(e.getId())){
               
               randomEncId =String.valueOf(Math.random()*999+100);
            }
            
        }
        String address = txtAdd1.getText() + txtCity1.getText() + txtState2.getText() + txtZip2.getText();
//        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
       d.setAdd(address);
       d.setName(doctorName.getText());
       d.setEmaildId(txtUsrName2.getText());
       d.setPswd(txtAdd5.getText());
       d.setGender(doctorContact3.getText());
       d.setContactNo(doctorContact.getText());
       d.setDob(jDateChooser1.getDate());
       d.setSpeciality(doctorSpecialization.getText());
       d.setHospname(hospitalList.getSelectedItem().toString());
//        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Doctor Updated");
        populateDoctorTable(ecoSystem.getDoctordirectory(), hospitalList.getSelectedItem().toString());
       
        
    }//GEN-LAST:event_updateDocActionPerformed

    private void doctorNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorNameKeyTyped
        // TODO add your handling code here:
        char typedName = evt.getKeyChar();
        if(!Character.isAlphabetic(typedName) && !Character.isWhitespace(typedName)){
            evt.consume();
        }
    }//GEN-LAST:event_doctorNameKeyTyped

    private void doctorContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorContactKeyTyped
        char typedContactNumber = evt.getKeyChar();
        if(!Character.isDigit(typedContactNumber)){
            evt.consume();
        }
        //Restrict the length to 10
        if(doctorContact.getText().length() == 10){
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorContactKeyTyped

    private void txtUsrName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrName2ActionPerformed

    private void txtZipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipKeyReleased
        // TODO add your handling code here:
        //        String zipconv = "^[0-9]{5}$";
        //        Pattern pat = Pattern.compile(zipconv);
        //        Matcher mat = pat.matcher(txtZip.getText());
        //
        //        if (!mat.matches()) {
            //            zip_chk.setText("Zipcode is incorrect");
            //        } else {
            //            zip_chk.setText("");
            //        }
    }//GEN-LAST:event_txtZipKeyReleased

    private void txtZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipActionPerformed

    private void txtStateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStateKeyReleased
        // TODO add your handling code here:

        //        String stateconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(stateconv);
        //        Matcher mat = pat.matcher(txtState.getText());
        //
        //        if (!mat.matches()) {
            //            state_chk.setText("State is incorrect");
            //        } else {
            //            state_chk.setText("");
            //        }
    }//GEN-LAST:event_txtStateKeyReleased

    private void txtStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateActionPerformed

    private void txtCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyReleased
        // TODO add your handling code here:
        //        String cityconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(cityconv);
        //        Matcher mat = pat.matcher(txtCity.getText());
        //
        //        if (!mat.matches()) {
            //            city_chk.setText("City is incorrect");
            //        } else {
            //            city_chk.setText("");
            //        }
    }//GEN-LAST:event_txtCityKeyReleased

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtAdd2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd2KeyReleased

    private void txtAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd2ActionPerformed

    private void txtZip2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZip2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip2KeyReleased

    private void txtZip2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZip2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip2ActionPerformed

    private void txtState2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtState2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState2KeyReleased

    private void txtState2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtState2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState2ActionPerformed

    private void txtCity1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCity1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity1KeyReleased

    private void txtCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity1ActionPerformed

    private void updateHospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospActionPerformed
        // TODO add your handling code here:
         int selectedRow = HospTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) HospTable.getModel();
        String hospitalName = model.getValueAt(selectedRow, 0).toString();
        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
//        h = new Hospital(txtFullName.getText(), txtNo.getText(), txtAdd.getText(), txtUsrName.getText(), txtPass.getText());
        h.setEnterpriseName(txtFullName.getText());
        h.setPassword(txtPass.getText());
        h.setRegistrationNo(txtNo.getText());
        String address = txtAdd.getText() + txtCity.getText() + txtState.getText() + txtZip.getText();
        h.setAddress(address);
        h.setUsername(txtUsrName.getText());
        System.out.println("Hospital"+h.getUsername());

//        ecoSystem.addHospital(h);
        for(Hospital h1: ecoSystem.getHospitaldirectory().getHospitalList()){
            System.out.println("hosp: "+ h1.getEnterpriseName());
        }
        dB4OUtil.storeSystem(ecoSystem);
        populateTable();
    }//GEN-LAST:event_updateHospActionPerformed

    private void nurseNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nurseNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nurseNameKeyTyped

    private void nurseContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nurseContactKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nurseContactKeyTyped

    private void txtUsrName3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrName3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrName3ActionPerformed

    private void txtAdd3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd3ActionPerformed

    private void txtAdd3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd3KeyReleased

    private void txtCity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCity2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity2ActionPerformed

    private void txtCity2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCity2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity2KeyReleased

    private void txtState3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtState3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState3ActionPerformed

    private void txtState3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtState3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState3KeyReleased

    private void txtZip3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZip3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip3ActionPerformed

    private void txtZip3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZip3KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip3KeyReleased

    private void updateNurseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateNurseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=nurseTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) nurseTable.getModel();
        Nurse n = (Nurse)model.getValueAt(selectedRowIndex1, 0);
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(Nurse e:ecoSystem.getNursedirectory()){
            if(randomEncId.equals(e.getId())){
               
               randomEncId =String.valueOf(Math.random()*999+100);
            }
            
        }
        String address = txtAdd3.getText() + patCity.getText() + txtState3.getText() + txtZip3.getText();
//        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
       n.setAdd(address);
       n.setName(nurseName.getText());
       n.setEmaildId(txtUsrName3.getText());
       n.setPswd(txtAdd6.getText());
       n.setGender(nurseGender.getText());
       n.setContactNo(nurseContact.getText());
       n.setDob(jDateChooser2.getDate());
       n.setHospname(hospitalList.getSelectedItem().toString());
//        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Nurse Updated");
        populateNurseTable(ecoSystem.getNursedirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_updateNurseActionPerformed

    private void createNurseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNurseActionPerformed
        // TODO add your handling code here:
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(Nurse n:ecoSystem.getNursedirectory()){
            if(randomEncId.equals(n.getId())){
               
               randomEncId =String.valueOf(Math.random()*999+100);
            }
            
        }
        String address = txtAdd3.getText() + txtCity2.getText() + txtState3.getText() + txtZip3.getText();
        Nurse nurse = new Nurse(txtUsrName3.getText(), txtAdd6.getText(), randomEncId, nurseName.getText(), address, nurseGender.getText(), nurseContact.getText(),jDateChooser2.getDate(),hospitalList1.getSelectedItem().toString());
       
        ecoSystem.addNurse(nurse);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Nurse added");
        populateNurseTable(ecoSystem.getNursedirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_createNurseActionPerformed

    private void delNurseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delNurseActionPerformed
        // TODO add your handling code here:
        int selectedRow = nurseTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) nurseTable.getModel();
        String nurseUname = model.getValueAt(selectedRow, 1).toString();
        System.out.println(" Doctor uname: " + nurseUname);
        ecoSystem.deleteNurse(nurseUname);
        dB4OUtil.storeSystem(ecoSystem);
        populateNurseTable(ecoSystem.getNursedirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_delNurseActionPerformed

    private void createPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPatActionPerformed
        // TODO add your handling code here:
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(Patient p:ecoSystem.getPatientdirectory()){
            if(randomEncId.equals(p.getId())){
               
               randomEncId =String.valueOf(Math.random()*999+100);
            }
            
        }
        String address = txtAdd4.getText() + patCity.getText() + patState.getText() + patZip.getText();
        Patient pat = new Patient(patUsrName4.getText(), patPwd.getText(), randomEncId, patName.getText(), address, patGender.getText(), patContact.getText(),jDateChooser3.getDate()," ",hospitalList2.getSelectedItem().toString());
//        Nurse nurse = new Nurse(txtUsrName3.getText(), txtAdd6.getText(), randomEncId, nurseName.getText(), address, nurseGender.getText(), nurseContact.getText(),jDateChooser2.getDate(),hospitalList1.getSelectedItem().toString());
        ecoSystem.addPatient(pat);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Patient added");
        populatePatientTable(ecoSystem.getPatientdirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_createPatActionPerformed

    private void viewPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=patientTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
//        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
//        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
//        Doctor d = ecoSystem.findDoctorByUserName(docName);
        Patient p= (Patient)model.getValueAt(selectedRowIndex1, 0);
        patName.setText(p.getName());
        patUsrName4.setText(p.getEmaildId());
        patPwd.setText(String.valueOf(p.getPswd()));
        patGender.setText(p.getGender());
        patContact.setText(String.valueOf(p.getContactNo()));
        txtAdd4.setText(p.getAdd());
        jDateChooser3.setDate(p.getDob());
        hospitalList2.setSelectedItem(p.getHospname());
    }//GEN-LAST:event_viewPatActionPerformed

    private void updatePatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=patientTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        Patient n = (Patient)model.getValueAt(selectedRowIndex1, 0);
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);
        
        for(Patient e:ecoSystem.getPatientdirectory()){
            if(randomEncId.equals(e.getId())){
               
               randomEncId =String.valueOf(Math.random()*999+100);
            }
            
        }
        String address = txtAdd4.getText() + patCity.getText() + patState.getText() + patZip.getText();
//        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
       n.setAdd(address);
       n.setName(patName.getText());
       n.setEmaildId(patUsrName4.getText());
       n.setPswd(patPwd.getText());
       n.setGender(patGender.getText());
       n.setContactNo(patContact.getText());
       n.setDob(jDateChooser3.getDate());
       n.setHospname(hospitalList2.getSelectedItem().toString());
//        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Patient Updated");
        populatePatientTable(ecoSystem.getPatientdirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_updatePatActionPerformed

    private void delPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPatActionPerformed
        // TODO add your handling code here:
        int selectedRow = patientTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        String doctorUName = model.getValueAt(selectedRow, 1).toString();
        System.out.println(" Patient uname: " + doctorUName);
        ecoSystem.deletePatient(doctorUName);
        dB4OUtil.storeSystem(ecoSystem);
        populatePatientTable(ecoSystem.getPatientdirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_delPatActionPerformed

    private void patNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patNameKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_patNameKeyTyped

    private void patContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patContactKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_patContactKeyTyped

    private void patUsrName4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patUsrName4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patUsrName4ActionPerformed

    private void txtAdd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd4ActionPerformed

    private void txtAdd4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd4KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd4KeyReleased

    private void patCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patCityActionPerformed

    private void patCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patCityKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_patCityKeyReleased

    private void patStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patStateActionPerformed

    private void patStateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patStateKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_patStateKeyReleased

    private void patZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patZipActionPerformed

    private void patZipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patZipKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_patZipKeyReleased

    private void hospitalListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalListActionPerformed

    private void viewDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDocActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex1=DocTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) DocTable.getModel();
//        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
//        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
//        Doctor d = ecoSystem.findDoctorByUserName(docName);
        Doctor d= (Doctor)model.getValueAt(selectedRowIndex1, 0);
        doctorName.setText(d.getName());
        txtUsrName2.setText(d.getEmaildId());
//        txtPass.setText(String.valueOf(d.getPswd()));
        doctorContact3.setText(d.getGender());
        doctorContact.setText(String.valueOf(d.getContactNo()));
        txtAdd1.setText(d.getAdd());
        jDateChooser1.setDate(d.getDob());
        doctorSpecialization.setText(d.getSpeciality());
        hospitalList.setSelectedItem(d.getHospname());
    }//GEN-LAST:event_viewDocActionPerformed

    private void doctorContact3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorContact3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorContact3KeyTyped

    private void txtAdd5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd5ActionPerformed

    private void txtAdd5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd5KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd5KeyReleased

    private void delDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delDocActionPerformed
        // TODO add your handling code here:
//        int selectedRowIndex1=DocTable.getSelectedRow();
//        if (selectedRowIndex1<0){
//            JOptionPane.showMessageDialog(this,"Please select a row to View");
//            return;
//        }
//        DefaultTableModel model = (DefaultTableModel) DocTable.getModel();
//        String docUser = model.getValueAt(selectedRowIndex1, 0).toString();
//        ecoSystem.deleteDoctor(docUser);
//        dB4OUtil.storeSystem(ecoSystem);
//        populateDoctorTable(ecoSystem.getDoctordirectory(), hospitalList.getSelectedItem().toString());
        int selectedRow = DocTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) DocTable.getModel();
        String doctorUName = model.getValueAt(selectedRow, 1).toString();
        System.out.println(" Doctor uname: " + doctorUName);
        ecoSystem.deleteDoctor(doctorUName);
        dB4OUtil.storeSystem(ecoSystem);
//        populateDoctorTable(ecoSystem.getDoctordirectory(), hospitalList.getSelectedItem().toString());
    }//GEN-LAST:event_delDocActionPerformed

    private void nurseGenderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nurseGenderKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_nurseGenderKeyTyped

    private void hospitalList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalList1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalList1ActionPerformed

    private void txtAdd6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd6ActionPerformed

    private void txtAdd6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd6KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd6KeyReleased

    private void viewNurseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewNurseActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=nurseTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) nurseTable.getModel();
//        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
//        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
//        Doctor d = ecoSystem.findDoctorByUserName(docName);
        Nurse n= (Nurse)model.getValueAt(selectedRowIndex1, 0);
        nurseName.setText(n.getName());
        txtUsrName3.setText(n.getEmaildId());
        txtAdd6.setText(String.valueOf(n.getPswd()));
        nurseGender.setText(n.getGender());
        nurseContact.setText(String.valueOf(n.getContactNo()));
        txtAdd3.setText(n.getAdd());
        jDateChooser2.setDate(n.getDob());
        hospitalList1.setSelectedItem(n.getHospname());
    }//GEN-LAST:event_viewNurseActionPerformed

    private void patGenderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patGenderKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_patGenderKeyTyped

    private void patPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patPwdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patPwdActionPerformed

    private void patPwdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patPwdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_patPwdKeyReleased

    private void hospitalList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalList2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalList2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DocDets;
    private javax.swing.JPanel DocDets1;
    private javax.swing.JPanel DocDets2;
    private javax.swing.JTable DocTable;
    private javax.swing.JTable HospTable;
    private javax.swing.JButton createDoc;
    private javax.swing.JButton createHosp;
    private javax.swing.JButton createNurse;
    private javax.swing.JButton createPat;
    private javax.swing.JButton delDoc;
    private javax.swing.JButton delNurse;
    private javax.swing.JButton delPat;
    private javax.swing.JTextField doctorContact;
    private javax.swing.JTextField doctorContact3;
    private javax.swing.JTextField doctorName;
    private javax.swing.JTextField doctorSpecialization;
    private javax.swing.JComboBox<String> hospitalList;
    private javax.swing.JComboBox<String> hospitalList1;
    private javax.swing.JComboBox<String> hospitalList2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbl_address;
    private javax.swing.JLabel lbl_address1;
    private javax.swing.JLabel lbl_address2;
    private javax.swing.JLabel lbl_address3;
    private javax.swing.JLabel lbl_address4;
    private javax.swing.JLabel lbl_address5;
    private javax.swing.JLabel lbl_address6;
    private javax.swing.JLabel lbl_address7;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_name1;
    private javax.swing.JLabel lbl_name2;
    private javax.swing.JLabel lbl_name3;
    private javax.swing.JLabel lbl_pswd;
    private javax.swing.JLabel lbl_registeryNum;
    private javax.swing.JLabel lbl_uname;
    private javax.swing.JTextField nurseContact;
    private javax.swing.JTextField nurseGender;
    private javax.swing.JTextField nurseName;
    private javax.swing.JTable nurseTable;
    private javax.swing.JTextField patCity;
    private javax.swing.JTextField patContact;
    private javax.swing.JTextField patGender;
    private javax.swing.JTextField patName;
    private javax.swing.JTextField patPwd;
    private javax.swing.JTextField patState;
    private javax.swing.JTextField patUsrName4;
    private javax.swing.JTextField patZip;
    private javax.swing.JButton patientLogoutBtn1;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtAdd2;
    private javax.swing.JTextField txtAdd3;
    private javax.swing.JTextField txtAdd4;
    private javax.swing.JTextField txtAdd5;
    private javax.swing.JTextField txtAdd6;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtCity2;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtNo;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtState2;
    private javax.swing.JTextField txtState3;
    private javax.swing.JTextField txtUsrName;
    private javax.swing.JTextField txtUsrName2;
    private javax.swing.JTextField txtUsrName3;
    private javax.swing.JTextField txtZip;
    private javax.swing.JTextField txtZip2;
    private javax.swing.JTextField txtZip3;
    private javax.swing.JLabel txt_City;
    private javax.swing.JLabel txt_City1;
    private javax.swing.JLabel txt_City2;
    private javax.swing.JLabel txt_City3;
    private javax.swing.JLabel txt_Zip;
    private javax.swing.JLabel txt_Zip2;
    private javax.swing.JLabel txt_Zip3;
    private javax.swing.JLabel txt_Zip4;
    private javax.swing.JLabel txt_state;
    private javax.swing.JLabel txt_state2;
    private javax.swing.JLabel txt_state3;
    private javax.swing.JLabel txt_state4;
    private javax.swing.JButton updateDoc;
    private javax.swing.JButton updateHosp;
    private javax.swing.JButton updateNurse;
    private javax.swing.JButton updatePat;
    private javax.swing.JButton viewDoc;
    private javax.swing.JButton viewHosp;
    private javax.swing.JButton viewNurse;
    private javax.swing.JButton viewPat;
    // End of variables declaration//GEN-END:variables
}
