/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Hospital.WorkArea.Admin;

import model.Location.Address;
import model.DB4OUtil.DB4OUtil;
import model.EcoSystem.EcoSystem;
import model.Enterprise.Hospital.Doctor;
import model.Enterprise.Hospital.Hospital;
import model.Enterprise.Hospital.Patient;
import UI.MainFrame;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shardul
 */
public class AdminDoctor extends javax.swing.JPanel {

    /**
     * Creates new form AdminDoctor
     */
    MainFrame mainFrame;
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil;
    Hospital hospital;
    Doctor doc;

    public AdminDoctor(MainFrame mainFrame, DB4OUtil dB4OUtil, EcoSystem ecoSystem, Hospital h) {
        initComponents();
        this.mainFrame = mainFrame;
        this.dB4OUtil = dB4OUtil;
        this.ecoSystem = ecoSystem;
        this.hospital = h;
        populateDoctorTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        doctorName = new javax.swing.JTextField();
        doctorContact = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        doctorSpecialization = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtUsrName = new javax.swing.JTextField();
        txtAdd5 = new javax.swing.JTextField();
        lbl_address5 = new javax.swing.JLabel();
        doctorContact3 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtZip2 = new javax.swing.JTextField();
        txtAdd1 = new javax.swing.JTextField();
        txtCity1 = new javax.swing.JTextField();
        txtState2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        doctorViewBtn = new javax.swing.JButton();
        doctorUpdateBtn = new javax.swing.JButton();
        createDoc = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tb1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "User Name", "Speacility", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 760, 190));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 48)); // NOI18N
        jLabel1.setText("MANAGE DOCTOR");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, -1, -1));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 620, 100, 40));

        jPanel2.setBackground(new java.awt.Color(184, 216, 246));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Contact");

        doctorName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorNameKeyTyped(evt);
            }
        });

        doctorContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorContactKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("DOB");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Specialization");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Email ID");

        txtUsrName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsrNameActionPerformed(evt);
            }
        });

        txtAdd5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd5ActionPerformed(evt);
            }
        });
        txtAdd5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd5KeyReleased(evt);
            }
        });

        lbl_address5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_address5.setText("Password");

        doctorContact3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                doctorContact3KeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Gender");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel14)
                            .addComponent(lbl_address5)
                            .addComponent(jLabel10))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doctorSpecialization)
                            .addComponent(txtAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(doctorName, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(doctorContact, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(txtUsrName)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(doctorContact3, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))))
                .addGap(58, 58, 58))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_address5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctorContact3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(doctorSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, -1, 260));
        jPanel2.getAccessibleContext().setAccessibleParent(jScrollPane1);

        jPanel6.setBackground(new java.awt.Color(184, 216, 246));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Address"));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setText("City");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setText("State");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel24.setText("Zip Code");

        txtZip2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZip2ActionPerformed(evt);
            }
        });
        txtZip2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtZip2KeyTyped(evt);
            }
        });

        txtAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdd1ActionPerformed(evt);
            }
        });
        txtAdd1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdd1KeyReleased(evt);
            }
        });

        txtCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCity1ActionPerformed(evt);
            }
        });
        txtCity1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCity1KeyReleased(evt);
            }
        });

        txtState2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtState2ActionPerformed(evt);
            }
        });
        txtState2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtState2KeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel25.setText("Line");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel34)
                            .addComponent(jLabel24))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtState2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtCity1)
                            .addComponent(txtZip2))))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtState2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addGap(9, 9, 9)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtZip2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 350, 380, 260));
        jPanel6.getAccessibleContext().setAccessibleParent(jScrollPane1);

        doctorViewBtn.setBackground(new java.awt.Color(204, 204, 204));
        doctorViewBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        doctorViewBtn.setText("View");
        doctorViewBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        doctorViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorViewBtnActionPerformed(evt);
            }
        });
        add(doctorViewBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, 80, 40));

        doctorUpdateBtn.setBackground(new java.awt.Color(204, 204, 204));
        doctorUpdateBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        doctorUpdateBtn.setText("Update");
        doctorUpdateBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        doctorUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorUpdateBtnActionPerformed(evt);
            }
        });
        add(doctorUpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 620, 100, 40));

        createDoc.setBackground(new java.awt.Color(204, 204, 204));
        createDoc.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createDoc.setText("Create");
        createDoc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        createDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDocActionPerformed(evt);
            }
        });
        add(createDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 620, 100, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Hospital/WorkArea/Admin/Hospital1.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1680, 930));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tb1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        String doctorUName = model.getValueAt(selectedRow, 0).toString();
        System.out.println(" doctor uname: " + doctorUName);
        ecoSystem.deleteDoctor(doctorUName);
        dB4OUtil.storeSystem(ecoSystem);
        populateDoctorTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtZip2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZip2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZip2ActionPerformed

    private void txtZip2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZip2KeyTyped
        // TODO add your handling code here:
        try{
            //Allow only digits in Zip field
            char typedZipCode = evt.getKeyChar();
            if(!Character.isDigit(typedZipCode)){
                evt.consume();
            }
            //Restrict the length to 5
            if(txtZip2.getText().length() > 4){
                evt.consume();
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_txtZip2KeyTyped

    private void txtAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd1ActionPerformed

    private void txtAdd1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd1KeyReleased
        // TODO add your handling code here:

        //        String addrconv = "^[a-zA-Z0-9 ]{0,30}$";
        //        Pattern pat = Pattern.compile(addrconv);
        //        Matcher mat = pat.matcher(txtAdd.getText());
        //
        //        if (!mat.matches()) {
            //            add_chk.setText("Address is incorrect");
            //        } else {
            //            add_chk.setText("");
            //        }
    }//GEN-LAST:event_txtAdd1KeyReleased

    private void txtCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCity1ActionPerformed

    private void txtCity1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCity1KeyReleased
        // TODO add your handling code here:
        //        String cityconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(cityconv);
        //        Matcher mat = pat.matcher(txtCity.getText());
        //
        //        if (!mat.matches()) {
            //            city_chk.setText("City is incorrect");
            //        } else {
            //            city_chk.setText("");
            //        }
    }//GEN-LAST:event_txtCity1KeyReleased

    private void txtState2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtState2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtState2ActionPerformed

    private void txtState2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtState2KeyReleased
        // TODO add your handling code here:

        //        String stateconv = "^[a-zA-Z ]{0,30}$";
        //        Pattern pat = Pattern.compile(stateconv);
        //        Matcher mat = pat.matcher(txtState.getText());
        //
        //        if (!mat.matches()) {
            //            state_chk.setText("State is incorrect");
            //        } else {
            //            state_chk.setText("");
            //        }
    }//GEN-LAST:event_txtState2KeyReleased

    private void txtUsrNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsrNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsrNameActionPerformed

    private void doctorContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorContactKeyTyped
        char typedContactNumber = evt.getKeyChar();
        if(!Character.isDigit(typedContactNumber)){
            evt.consume();
        }
        //Restrict the length to 10
        if(doctorContact.getText().length() == 10){
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorContactKeyTyped

    private void doctorNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorNameKeyTyped
        // TODO add your handling code here:
        char typedName = evt.getKeyChar();
        if(!Character.isAlphabetic(typedName) && !Character.isWhitespace(typedName)){
            evt.consume();
        }
    }//GEN-LAST:event_doctorNameKeyTyped

    private void doctorViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorViewBtnActionPerformed
        // TODO add your handling code here:
//        int selectedRowIndex1=tb1.getSelectedRow();
//        if (selectedRowIndex1<0){
//            JOptionPane.showMessageDialog(this,"Please select a row to view");
//            return;
//        }
//        DefaultTableModel model1 = (DefaultTableModel)tb1.getModel();
//        Doctor selectedDoc=(Doctor)model1.getValueAt(selectedRowIndex1,1);
//        doctorName.setText(selectedDoc.getName());
//        doctorContact.setText(selectedDoc.getContactNo());
//        txtUsrName.setText(selectedDoc.getEmaildId());
//        jDateChooser1.setDate(selectedDoc.getDob());
//        doctorSpecialization.setText(selectedDoc.getSpeciality());
        int selectedRowIndex1=tb1.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
//        String docName = model.getValueAt(selectedRowIndex1, 0).toString();
//        DefaultTableModel model1 = (DefaultTableModel) HospTable.getModel();
//        Hospital selectedHosp=(Hospital)model1.getValueAt(selectedRowIndex1,0);
//        Hospital h = ecoSystem.getHospitaldirectory().findHospital(hospitalName);
//        Doctor d = ecoSystem.findDoctorByUserName(docName);
        Doctor d= (Doctor)model.getValueAt(selectedRowIndex1, 0);
        doctorName.setText(d.getName());
        txtUsrName.setText(d.getEmaildId());
        txtAdd5.setText(String.valueOf(d.getPswd()));
       
        doctorContact.setText(String.valueOf(d.getContactNo()));
        txtAdd1.setText(d.getAdd());
        jDateChooser1.setDate(d.getDob());
        doctorSpecialization.setText(d.getSpeciality());
        
    }//GEN-LAST:event_doctorViewBtnActionPerformed

    private void doctorUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorUpdateBtnActionPerformed
        // TODO add your handling code here:
//        int selectedRow = tb1.getSelectedRow();
//
//        if (selectedRow < 0) {
//            JOptionPane.showMessageDialog(this, "Please select a row to add status");
//            return;
//        }
//
//        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
//        String id = model.getValueAt(selectedRow, 0).toString();
//
//        for (Doctor d : ecoSystem.getDoctordirectory()) {
//            try {
//                if (d.getEmaildId().equals(id)) {
//                    d.setContactNo(doctorContact.getText());
//                    d.setDob(jDateChooser1.getDate());
//                    d.setName(doctorName.getName());
//                    String address = txtAdd.getText() + txtCity.getText() + txtState.getText() + patientZipCode2.getText();
//                    d.setAdd(address);
//                    d.setSpeciality(doctorSpecialization.getText());
//                    
//                    
//                }
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//        }
//
//        dB4OUtil.storeSystem(ecoSystem);
        int selectedRowIndex1=tb1.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        Doctor d = (Doctor)model.getValueAt(selectedRowIndex1, 0);
        
        
        String address = txtAdd1.getText() + txtCity1.getText() + txtState2.getText() + txtZip2.getText();
//        Doctor doctor = new Doctor(txtUsrName2.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),hospitalList.getSelectedItem().toString());
       d.setAdd(address);
       d.setName(doctorName.getText());
       d.setEmaildId(txtUsrName.getText());
       d.setPswd(txtAdd5.getText());
       d.setGender(doctorContact3.getText());
       d.setContactNo(doctorContact.getText());
       d.setDob(jDateChooser1.getDate());
       d.setSpeciality(doctorSpecialization.getText());
       d.setHospname(this.hospital.getEnterpriseName());
//        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Doctor Updated");
//        populateDoctorTable(ecoSystem.getDoctordirectory(), hospitalList.getSelectedItem().toString());
        populateDoctorTable();
    }//GEN-LAST:event_doctorUpdateBtnActionPerformed

    private void txtAdd5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdd5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd5ActionPerformed

    private void txtAdd5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdd5KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdd5KeyReleased

    private void doctorContact3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doctorContact3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorContact3KeyTyped

    private void createDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDocActionPerformed
        // TODO add your handling code here:
        String randomEncId;
        randomEncId=String.valueOf(Math.random()*999+100);

        for(Doctor e:ecoSystem.getDoctordirectory()){
            if(randomEncId.equals(e.getId())){

                randomEncId =String.valueOf(Math.random()*999+100);
            }

        }
        
        String address = txtAdd1.getText() + txtCity1.getText() + txtState2.getText() + txtZip2.getText();
        Doctor doctor = new Doctor(txtUsrName.getText(), txtAdd5.getText(), randomEncId, doctorName.getText(), address, doctorContact3.getText(), doctorContact.getText(),jDateChooser1.getDate(),doctorSpecialization.getText(),this.hospital.getEnterpriseName());

        ecoSystem.addDoctor(doctor);
        dB4OUtil.storeSystem(ecoSystem);
        System.out.println("Doctor added");
        populateDoctorTable();
    }//GEN-LAST:event_createDocActionPerformed

    private void populateDoctorTable() {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);

        for (Doctor d : ecoSystem.getDoctordirectory()) {

            if (d.getHospname().equals(hospital.getEnterpriseName())) {
                Object[] row = new Object[5];
                row[0] = d;
                row[1] = d.getEmaildId();
                row[2] = d.getSpeciality();
                row[3] = d.getAdd();
                model.addRow(row);

            }

        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createDoc;
    private javax.swing.JTextField doctorContact;
    private javax.swing.JTextField doctorContact3;
    private javax.swing.JTextField doctorName;
    private javax.swing.JTextField doctorSpecialization;
    private javax.swing.JButton doctorUpdateBtn;
    private javax.swing.JButton doctorViewBtn;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_address5;
    private javax.swing.JTable tb1;
    private javax.swing.JTextField txtAdd1;
    private javax.swing.JTextField txtAdd5;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtState2;
    private javax.swing.JTextField txtUsrName;
    private javax.swing.JTextField txtZip2;
    // End of variables declaration//GEN-END:variables
}
