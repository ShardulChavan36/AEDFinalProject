/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.DonorBank.WorkArea.DonorAdmin;

import model.DB4OUtil.DB4OUtil;
import model.EcoSystem.EcoSystem;
import model.Enterprise.DonorInventory.DonorInventory;
import model.Organization.DonateEntity;
import UI.MainFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author smiti
 */
public class DonorAdminTransplant extends javax.swing.JPanel {

    /**
     * Creates new form DonorAdminTransplant
     */
    MainFrame mainScreen;
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil;
    DonorInventory donbank;
    
    public DonorAdminTransplant(MainFrame mainScreen, DB4OUtil dB4OUtil, EcoSystem ecoSystem, DonorInventory donbank) {
        initComponents();
        this.mainScreen = mainScreen;
        this.dB4OUtil = dB4OUtil;
        this.ecoSystem = ecoSystem;
        this.donbank = donbank;
        populateTable(donbank.getEnterpriseName().toLowerCase());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();

        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.hoverBorderColor"));

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Type", "Blood group", "Entity name", "Status", "Donor Enterprise", "Receiver Enterprise", "Patient Name", "Donar name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

 private void populateTable(String name) {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (DonateEntity d : ecoSystem.getDonateEntityList()) {

            if (d.getDonorEnterprise().getEnterpriseName().toLowerCase().equals(name)) {
                Object[] row = new Object[8];
                row[0] = d.getType();
                row[1] = d.getBloodGroup();
                row[2] = d.getEntityName();
                row[3] = d.getStatus();
                try {
                    row[4] = d.getDonorEnterprise().getEnterpriseName();
                } catch (Exception e) {

                }

                try {
                    row[5] = d.getReceiverEnterprise().getEnterpriseName();
                } catch (Exception e) {

                }
                try {
                    row[6] = d.getReceiverPatient().getName();
                } catch (Exception e) {

                }
                try {
                    row[7] = d.getDonorPatient().getName();
                } catch (Exception e) {

                }

                model.addRow(row);
            }
            try {
                if (d.getReceiverEnterprise().getEnterpriseName().toLowerCase().equals(name)) {
                    Object[] row = new Object[8];
                    row[0] = d.getType();
                    row[1] = d.getBloodGroup();
                    row[2] = d.getEntityName();
                    row[3] = d.getStatus();
                    try {
                        row[4] = d.getDonorEnterprise().getEnterpriseName();
                    } catch (Exception e) {

                    }

                    try {
                        row[5] = d.getReceiverEnterprise().getEnterpriseName();
                    } catch (Exception e) {

                    }
                    try {
                        row[6] = d.getReceiverPatient().getName();
                    } catch (Exception e) {

                    }
                    try {
                        row[7] = d.getDonorPatient().getName();
                    } catch (Exception e) {

                    }

                    model.addRow(row);
                }
            } catch (Exception e) {

            }

        }

    }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
